{"version":3,"file":"js/647.072d6d768e5429e13372.js","mappings":"8aAQM,EAAc,IAAI,ICJxB,IAAMA,EAAOC,SAASC,eAAe,QAErC,YAAgB,UDIC,WAAM,OACrB,SAAC,KAAQ,GACPC,MAAO,eAAK,EAC6C,IACvDC,YAAU,WAEZ,SAACC,EAAA,GAAmB,GAACC,OAAQ,GAAW,WACtC,SAACC,EAAA,GAAY,GACXC,IAAK,KACLC,OAAO,EACPC,UAAW,CACTC,GAAI,CACFC,OAAQ,WACN,8CAIL,WAED,SAACC,EAAA,EAAG,YAnBW,GCJE,IAAKb,GAAM,WAClC,OAAAA,aAAI,EAAJA,EAAMc,aAAa,iBAAkB,OAArC,G","sources":["webpack:///./src/AppEntry.tsx","webpack:///./src/bootstrap.tsx"],"sourcesContent":["import { I18nProvider } from '@rhoas/app-services-ui-components';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport App from './App';\nimport { init } from './store';\n\nconst queryClient = new QueryClient();\n\nconst AppEntry = () => (\n  <Provider\n    store={init(\n      ...(process.env.NODE_ENV !== 'production' ? [logger] : [])\n    ).getStore()}\n  >\n    <QueryClientProvider client={queryClient}>\n      <I18nProvider\n        lng={'en'}\n        debug={true}\n        resources={{\n          en: {\n            common: () =>\n              import(\n                '@rhoas/app-services-ui-components/locales/en/common.json'\n              ),\n          },\n        }}\n      >\n        <App />\n      </I18nProvider>\n    </QueryClientProvider>\n  </Provider>\n);\n\nexport default AppEntry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<AppEntry />, root, () =>\n  root?.setAttribute('data-ouia-safe', 'true')\n);\n"],"names":["root","document","getElementById","store","getStore","QueryClientProvider","client","I18nProvider","lng","debug","resources","en","common","App","setAttribute"],"sourceRoot":""}