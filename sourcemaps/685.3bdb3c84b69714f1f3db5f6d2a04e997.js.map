{"version":3,"file":"js/685.65f1daad01cbb16a19ec.js","mappings":"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","sources":["webpack:///./src/client/api/mock-service.ts","webpack:///./src/client/api/ciam-authz.ts","webpack:///./src/client/api/ciam-service.ts","webpack:///./src/client/entitlements-api/entitlements-service.ts","webpack:///./src/client/entitlements-api/rbac.ts","webpack:///./src/client/entitlements-api/entitlements.ts","webpack:///./src/client/service.ts","webpack:///./src/Components/ServiceProvider.tsx","webpack:///./src/Components/EmptyStateNoSubscription.tsx","webpack:///./src/Components/RemoveUsersModal.tsx","webpack:///./src/Components/SeatsHeader.tsx","webpack:///./src/Components/EmptyStateNoAssignedSeat.tsx","webpack:///./src/Components/EmptyStateNoResults.tsx","webpack:///./src/Components/UsersWithSeatTable.tsx","webpack:///./src/Components/ConfirmRemoveDialog.tsx","webpack:///./src/Pages/UsersPage.tsx","webpack:///./src/Components/UsersPickerTable.tsx","webpack:///./src/Pages/AddUsersPage.tsx","webpack:///./src/Pages/RemoveUsersPage.tsx","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/store/index.ts"],"sourcesContent":["import { License, LicenseService, User } from '../service';\n\ntype MockLicense = {\n  totalSeats: number;\n  availableSeats: number;\n  assignedSeats: number;\n};\n\nexport class MockService implements LicenseService {\n  async get(): Promise<License> {\n    const { totalSeats, availableSeats }: MockLicense = await (\n      await fetch('/aw-api/subscriptions')\n    ).json();\n    return {\n      total: totalSeats,\n      available: availableSeats,\n    };\n  }\n\n  async seats(): Promise<User[]> {\n    return await (await fetch('/aw-api/users')).json();\n  }\n\n  assign(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  unAssign(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * CIAM Authz\n * version not set\n * DO NOT MODIFY - This file has been generated using oazapfts.\n * See https://www.npmjs.com/package/oazapfts\n */\nimport * as Oazapfts from 'oazapfts/lib/runtime';\nimport * as QS from 'oazapfts/lib/runtime/query';\nexport const defaults: Oazapfts.RequestOpts = {\n  baseUrl: '/',\n};\nconst oazapfts = Oazapfts.runtime(defaults);\nexport const servers = {};\nexport type V1AlphaCheckPermissionRequest = {\n  subject?: string;\n  operation?: string;\n  resourcetype?: string;\n  resourceid?: string;\n};\nexport type V1AlphaCheckPermissionResponse = {\n  result?: boolean;\n  description?: string;\n};\nexport type ProtobufAny = {\n  '@type'?: string;\n  [key: string]: any;\n};\nexport type RpcStatus = {\n  code?: number;\n  message?: string;\n  details?: ProtobufAny[];\n};\nexport type V1AlphaEmpty = object;\nexport type EntitleOrgResponseIsTheResponseWhenEntitlingAnOrg = object;\nexport type ImportOrgResponse = {\n  importedUsersCount?: string;\n  notImportedUsersCount?: string;\n};\nexport type V1AlphaGetLicenseResponse = {\n  seatsTotal?: string;\n  seatsAvailable?: string;\n};\nexport type V1AlphaModifySeatsResponse = object;\nexport type V1AlphaGetSeatsUserRepresentation = {\n  displayName?: string;\n  id?: string;\n  assigned?: boolean;\n  firstName?: string;\n  lastName?: string;\n  username?: string;\n};\nexport type V1AlphaGetSeatsResponse = {\n  users?: V1AlphaGetSeatsUserRepresentation[];\n};\n/**\n * Checks the permission and returns allowed (true) or not allowed (false)\n */\nexport function checkPermissionCheckPermission(\n  v1AlphaCheckPermissionRequest: V1AlphaCheckPermissionRequest,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaCheckPermissionResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      '/v1alpha/check',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: v1AlphaCheckPermissionRequest,\n      })\n    )\n  );\n}\n/**\n * Health check for the AuthZ service.\n */\nexport function healthCheckServiceHealthCheck(opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaEmpty;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >('/v1alpha/healthcheck', {\n      ...opts,\n    })\n  );\n}\n/**\n * Entitle an Org access through a seat based license for a service.\n */\nexport function licenseServiceEntitleOrg(\n  orgId: string,\n  serviceId: string,\n  body: {\n    maxSeats?: string;\n  },\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: EntitleOrgResponseIsTheResponseWhenEntitlingAnOrg;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(\n        orgId\n      )}/entitlements/${encodeURIComponent(serviceId)}`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body,\n      })\n    )\n  );\n}\nexport function importServiceImportOrg(\n  orgId: string,\n  body: object,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: ImportOrgResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/import`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body,\n      })\n    )\n  );\n}\n/**\n * Summarize a license.\n */\nexport function licenseServiceGetLicense(\n  orgId: string,\n  serviceId: string,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaGetLicenseResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/licenses/${encodeURIComponent(\n        serviceId\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Assign or unassign users to/from the license.\n */\nexport function licenseServiceModifySeats(\n  orgId: string,\n  serviceId: string,\n  body: {\n    assign?: string[];\n    unassign?: string[];\n  },\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaModifySeatsResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/licenses/${encodeURIComponent(\n        serviceId\n      )}`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body,\n      })\n    )\n  );\n}\n/**\n * Gets user details with filters.\n */\nexport function licenseServiceGetSeats(\n  orgId: string,\n  serviceId: string,\n  {\n    includeUsers,\n    filter,\n  }: {\n    includeUsers?: boolean;\n    filter?: 'assigned' | 'assignable';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaGetSeatsResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/licenses/${encodeURIComponent(\n        serviceId\n      )}/seats${QS.query(\n        QS.explode({\n          includeUsers,\n          filter,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n","import {\n  AuthenticatedUser,\n  License,\n  LicenseService,\n  TokenFunction,\n  User,\n  header,\n} from '../service';\nimport {\n  licenseServiceGetLicense,\n  licenseServiceGetSeats,\n  licenseServiceModifySeats,\n} from './ciam-authz';\n\nexport class CiamAuthz implements LicenseService {\n  private baseUrl: string;\n\n  constructor(baseUrl?: string) {\n    this.baseUrl = baseUrl || '';\n  }\n\n  async get({ orgId, serviceId, token }: AuthenticatedUser): Promise<License> {\n    const opts = await this.requestHeader(token);\n    const result = await licenseServiceGetLicense(orgId, serviceId, opts);\n    return {\n      available: Number(result.seatsAvailable) || 0,\n      total: Number(result.seatsTotal) || 0,\n    };\n  }\n\n  async seats(\n    { orgId, serviceId, token }: AuthenticatedUser,\n    assigned: boolean | undefined = true\n  ): Promise<User[]> {\n    const opts = await this.requestHeader(token);\n    const result = await licenseServiceGetSeats(\n      orgId,\n      serviceId,\n      { filter: assigned ? 'assigned' : 'assignable' },\n      opts\n    );\n    return (\n      result.users?.map(({ id, firstName, lastName, username, assigned }) => ({\n        id: id || '',\n        firstName: firstName || '',\n        lastName: lastName || '',\n        userName: username || '',\n        assigned: !!assigned,\n      })) || []\n    );\n  }\n\n  private async requestHeader(token: TokenFunction) {\n    return await header(token, this.baseUrl);\n  }\n\n  async assign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    const body = { assign: userIds };\n    await this.modify(user, body);\n    return;\n  }\n\n  async unAssign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    const body = { unassign: userIds };\n    await this.modify(user, body);\n    return;\n  }\n\n  private async modify(\n    { orgId, serviceId, token }: AuthenticatedUser,\n    body: any\n  ): Promise<any> {\n    const opts = await this.requestHeader(token);\n    return licenseServiceModifySeats(orgId, serviceId, body, opts);\n  }\n}\n","/**\n * Entitlements\n * 1.0.0\n * DO NOT MODIFY - This file has been generated using oazapfts.\n * See https://www.npmjs.com/package/oazapfts\n */\nimport * as Oazapfts from 'oazapfts/lib/runtime';\nimport * as QS from 'oazapfts/lib/runtime/query';\nexport const defaults: Oazapfts.RequestOpts = {\n  baseUrl: '/api/entitlements/v1/',\n};\nconst oazapfts = Oazapfts.runtime(defaults);\nexport const servers = {\n  localEntitlementsApi: '/api/entitlements/v1/',\n  prodEntitlementsApi: 'https://cloud.redhat.com/api/entitlements/v1/',\n};\nexport type ServiceDetails = {\n  is_entitled?: boolean;\n  is_trial?: boolean;\n};\nexport type Service = {\n  [key: string]: ServiceDetails;\n};\nexport type PaginationMeta = {\n  count?: number;\n};\nexport type PaginationLinks = {\n  first?: string;\n  previous?: string;\n  next?: string;\n  last?: string;\n};\nexport type ListPagination = {\n  meta?: PaginationMeta;\n  links?: PaginationLinks;\n};\nexport type Seat = {\n  subscription_id?: string;\n  account_username?: string;\n};\nexport type ListSeatsResponsePagination = ListPagination & {\n  data: Seat[];\n  allowed?: number;\n  consumed?: number;\n};\nexport type Error = {\n  error?: string;\n};\nexport type SeatRequest = {\n  account_username: string;\n};\nexport type ComplianceScreeningResponse = {\n  result?: 'OK' | 'ERROR_T5' | 'ERROR_OFAC' | 'ERROR_EXPORT_CONTROL';\n  description?: string;\n};\nexport type ComplianceScreeningErrorResponse = {\n  errors?: {\n    error?: string;\n    identityType?: string;\n    identity?: string;\n  }[];\n};\nexport type DependencyErrorDetails = {\n  dependency_failure?: boolean;\n  service?: string;\n  status?: number;\n  endpoint?: string;\n  message?: string;\n};\nexport type DependencyErrorResponse = {\n  error?: {\n    [key: string]: DependencyErrorDetails;\n  };\n};\n/**\n * get a list of services a user is entitled to\n */\nexport function getServices(opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: Service;\n        }\n      | {\n          status: 404;\n        }\n    >('/services', {\n      ...opts,\n    })\n  );\n}\n/**\n * returns list of users occupying seats\n */\nexport function getSeats(\n  {\n    limit,\n    offset,\n  }: {\n    limit?: number;\n    offset?: number;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: ListSeatsResponsePagination;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/seats${QS.query(\n        QS.explode({\n          limit,\n          offset,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * assign a user to a seat\n */\nexport function postSeats(\n  seatRequest: SeatRequest,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: Seat;\n        }\n      | {\n          status: 400;\n          data: Error;\n        }\n    >(\n      '/seats',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: seatRequest,\n      })\n    )\n  );\n}\n/**\n * remove a user from a seat\n */\nexport function deleteSeatsById(id: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 400;\n          data: Error;\n        }\n      | {\n          status: 403;\n          data: Error;\n        }\n    >(`/seats/${encodeURIComponent(id)}`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * verify exports compliance for a given user\n */\nexport function getCompliance(opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: ComplianceScreeningResponse;\n        }\n      | {\n          status: 400;\n          data: ComplianceScreeningErrorResponse;\n        }\n      | {\n          status: 500;\n          data: DependencyErrorResponse;\n        }\n    >('/compliance', {\n      ...opts,\n    })\n  );\n}\n","/**\n * Role Based Access Control\n * 1.0.0\n * DO NOT MODIFY - This file has been generated using oazapfts.\n * See https://www.npmjs.com/package/oazapfts\n */\nimport * as Oazapfts from 'oazapfts/lib/runtime';\nimport * as QS from 'oazapfts/lib/runtime/query';\nexport const defaults: Oazapfts.RequestOpts = {\n  baseUrl: '/api/rbac/v1',\n};\nconst oazapfts = Oazapfts.runtime(defaults);\nexport const servers = {\n  server1: '/api/rbac/v1',\n};\nexport type PaginationMeta = {\n  count?: number;\n};\nexport type PaginationLinks = {\n  first?: string;\n  previous?: string;\n  next?: string;\n  last?: string;\n};\nexport type ListPagination = {\n  meta?: PaginationMeta;\n  links?: PaginationLinks;\n};\nexport type CrossAccountRequest = {\n  request_id?: string;\n  target_account?: string;\n  target_org?: string;\n  status?: string;\n  created?: string;\n  start_date?: any;\n  end_date?: any;\n};\nexport type CrossAccountRequestByAccount = CrossAccountRequest & {\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n};\nexport type CrossAccountRequestByUserId = CrossAccountRequest & {\n  user_id?: string;\n};\nexport type CrossAccountRequestPagination = ListPagination & {\n  data: (CrossAccountRequestByAccount | CrossAccountRequestByUserId)[];\n};\nexport type Error403 = {\n  errors: {\n    detail?: string;\n    source?: string;\n    status?: string;\n  }[];\n};\nexport type Error = {\n  errors: {\n    detail?: string;\n    status?: string;\n  }[];\n};\nexport type CrossAccountRequestIn = {\n  target_account: string;\n  target_org?: string;\n  start_date: string;\n  end_date: string;\n  roles: string[];\n};\nexport type Permission = {\n  application?: string;\n  resource_type?: string;\n  verb?: string;\n  permission?: string;\n  description?: string;\n};\nexport type CrossAccountRequestWithRoles = {\n  request_id?: string;\n  target_account?: string;\n  target_org?: string;\n  start_date?: string;\n  end_date?: string;\n  status?: string;\n  created?: string;\n  roles?: {\n    display_name?: string;\n    description?: string;\n    permissions?: Permission[];\n  }[];\n};\nexport type CrossAccountRequestOut = CrossAccountRequestWithRoles & {\n  user_id?: string;\n};\nexport type CrossAccountRequestDetailByAccount =\n  CrossAccountRequestWithRoles & {\n    first_name?: any;\n    last_name?: any;\n    email?: any;\n  };\nexport type CrossAccountRequestDetailByUseId = CrossAccountRequestWithRoles & {\n  user_id?: any;\n};\nexport type CrossAccountRequestDetail =\n  | CrossAccountRequestDetailByAccount\n  | CrossAccountRequestDetailByUseId;\nexport type CrossAccountRequestUpdateIn = {\n  start_date: string;\n  end_date: string;\n  roles: string[];\n};\nexport type CrossAccountRequestPatch = {\n  start_date?: string;\n  end_date?: string;\n  roles?: string[];\n  status?: 'pending' | 'approved' | 'expired' | 'cancelled' | 'denied';\n};\nexport type Status = {\n  api_version: number;\n  commit?: string;\n};\nexport type Principal = {\n  username: string;\n  email: string;\n  first_name?: string;\n  last_name?: string;\n  is_active?: boolean;\n  is_org_admin?: boolean;\n};\nexport type PrincipalMinimal = {\n  username: string;\n};\nexport type PrincipalPagination = ListPagination & {\n  data: (Principal | PrincipalMinimal)[];\n};\nexport type Group = {\n  name: string;\n  description?: string;\n};\nexport type Uuid = {\n  uuid: string;\n};\nexport type Timestamped = {\n  created: string;\n  modified: string;\n};\nexport type GroupOut = Group &\n  Uuid &\n  Timestamped & {\n    principalCount?: number;\n    roleCount?: number;\n    system?: boolean;\n    platform_default?: boolean;\n    admin_default?: boolean;\n  };\nexport type GroupPagination = ListPagination & {\n  data: GroupOut[];\n};\nexport type Role = {\n  name: string;\n  display_name?: string;\n  description?: string;\n};\nexport type RoleOut = Role &\n  Uuid &\n  Timestamped & {\n    policyCount?: number;\n    accessCount?: number;\n    applications?: string[];\n    system?: boolean;\n    platform_default?: boolean;\n    admin_default?: boolean;\n    external_role_id?: string;\n    external_tenant?: string;\n  };\nexport type GroupWithPrincipalsAndRoles = Group &\n  Uuid &\n  Timestamped & {\n    principals: Principal[];\n    roles: RoleOut[];\n  };\nexport type PrincipalIn = {\n  username: string;\n};\nexport type GroupPrincipalIn = {\n  principals: PrincipalIn[];\n};\nexport type ErrorNotFound = {\n  errors: {\n    detail?: string;\n    status?: string;\n    source?: string;\n  }[];\n};\nexport type GroupRolesPagination = ListPagination & {\n  data: RoleOut[];\n};\nexport type GroupRoleIn = {\n  roles: string[];\n};\nexport type ResourceDefinitionFilter = {\n  key: string;\n  operation: 'equal' | 'in';\n  value: string;\n};\nexport type ResourceDefinition = {\n  attributeFilter: ResourceDefinitionFilter;\n};\nexport type Access = {\n  permission: string;\n  resourceDefinitions: ResourceDefinition[];\n};\nexport type RoleIn = Role & {\n  access: Access[];\n};\nexport type RoleWithAccess = RoleOut & {\n  access: Access[];\n};\nexport type AdditionalGroup = {\n  name?: string;\n  description?: string;\n  uuid?: string;\n};\nexport type RoleOutDynamic = Role &\n  Uuid &\n  Timestamped & {\n    policyCount: number;\n    accessCount: number;\n    applications: string[];\n    system: boolean;\n    platform_default: boolean;\n    admin_default: boolean;\n    groups_in_count?: number;\n    groups_in?: AdditionalGroup[];\n    external_role_id?: string;\n    external_tenant?: string;\n    access?: Access[];\n  };\nexport type RolePaginationDynamic = ListPagination & {\n  data: RoleOutDynamic[];\n};\nexport type RolePatch = {\n  name?: string;\n  display_name?: string;\n  description?: string;\n};\nexport type AccessPagination = ListPagination & {\n  data: Access[];\n};\nexport type Policy = {\n  name: string;\n  description?: string;\n};\nexport type PolicyIn = Policy & {\n  group: string;\n  roles: string[];\n};\nexport type PolicyExtended = Policy &\n  Uuid &\n  Timestamped & {\n    group: GroupOut;\n    roles: RoleOut[];\n  };\nexport type PolicyPagination = ListPagination & {\n  data: PolicyExtended[];\n};\nexport type PermissionPagination = ListPagination & {\n  data: Permission[];\n};\nexport type PermissionOptionsPagination = ListPagination & {\n  data: string[];\n};\n/**\n * List the cross account requests for a user or account\n */\nexport function listCrossAccountRequests(\n  {\n    limit,\n    offset,\n    queryBy,\n    account,\n    orgId,\n    approvedOnly,\n    status,\n    orderBy,\n  }: {\n    limit?: number;\n    offset?: number;\n    queryBy?: 'user_id' | 'target_org';\n    account?: string;\n    orgId?: string;\n    approvedOnly?: 'true';\n    status?: 'pending' | 'approved' | 'denied' | 'cancelled' | 'expired';\n    orderBy?:\n      | 'request_id'\n      | 'start_date'\n      | 'end_date'\n      | 'created'\n      | 'modified'\n      | 'status';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          query_by: queryBy,\n          account,\n          org_id: orgId,\n          approved_only: approvedOnly,\n          status,\n          order_by: orderBy,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Create a cross account request\n */\nexport function createCrossAccountRequests(\n  crossAccountRequestIn: CrossAccountRequestIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: CrossAccountRequestOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/cross-account-requests/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: crossAccountRequestIn,\n      })\n    )\n  );\n}\n/**\n * Get a cross account request\n */\nexport function getCrossAccountRequest(\n  uuid: string,\n  {\n    queryBy,\n    account,\n    approvedOnly,\n  }: {\n    queryBy?: 'user_id' | 'target_org';\n    account?: string;\n    approvedOnly?: 'true';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestDetail;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${encodeURIComponent(uuid)}/${QS.query(\n        QS.explode({\n          query_by: queryBy,\n          account,\n          approved_only: approvedOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Update a cross account request\n */\nexport function putCrossAccountRequest(\n  uuid: string,\n  crossAccountRequestUpdateIn: CrossAccountRequestUpdateIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestDetail;\n        }\n      | {\n          status: 201;\n          data: CrossAccountRequestOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: crossAccountRequestUpdateIn,\n      })\n    )\n  );\n}\n/**\n * Patch a cross account request\n */\nexport function patchCrossAccountRequest(\n  uuid: string,\n  crossAccountRequestPatch: CrossAccountRequestPatch,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestDetail;\n        }\n      | {\n          status: 201;\n          data: CrossAccountRequestOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PATCH',\n        body: crossAccountRequestPatch,\n      })\n    )\n  );\n}\n/**\n * Obtain server status\n */\nexport function getStatus(opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: Status;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >('/status/', {\n      ...opts,\n    })\n  );\n}\n/**\n * List the principals for a tenant\n */\nexport function listPrincipals(\n  {\n    limit,\n    offset,\n    matchCriteria,\n    usernames,\n    sortOrder,\n    email,\n    status,\n    adminOnly,\n    orderBy,\n    usernameOnly,\n  }: {\n    limit?: number;\n    offset?: number;\n    matchCriteria?: 'partial' | 'exact';\n    usernames?: string;\n    sortOrder?: 'asc' | 'desc';\n    email?: string;\n    status?: 'enabled' | 'disabled' | 'all';\n    adminOnly?: 'true' | 'false';\n    orderBy?: 'username';\n    usernameOnly?: true | false;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PrincipalPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/principals/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          match_criteria: matchCriteria,\n          usernames,\n          sort_order: sortOrder,\n          email,\n          status,\n          admin_only: adminOnly,\n          order_by: orderBy,\n          username_only: usernameOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Create a group in a tenant\n */\nexport function createGroup(group: Group, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: GroupOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/groups/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: group,\n      })\n    )\n  );\n}\n/**\n * List the groups for a tenant\n */\nexport function listGroups(\n  {\n    limit,\n    offset,\n    name,\n    nameMatch,\n    scope,\n    username,\n    excludeUsername,\n    uuid,\n    roleNames,\n    roleDiscriminator,\n    orderBy,\n    platformDefault,\n    adminDefault,\n    system,\n  }: {\n    limit?: number;\n    offset?: number;\n    name?: string;\n    nameMatch?: 'partial' | 'exact';\n    scope?: 'account' | 'principal';\n    username?: string;\n    excludeUsername?: string;\n    uuid?: string[];\n    roleNames?: string[];\n    roleDiscriminator?: 'all' | 'any';\n    orderBy?: 'name' | 'modified' | 'principalCount' | 'policyCount';\n    platformDefault?: boolean;\n    adminDefault?: boolean;\n    system?: boolean;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          name,\n          name_match: nameMatch,\n          scope,\n          username,\n          exclude_username: excludeUsername,\n          role_discriminator: roleDiscriminator,\n          order_by: orderBy,\n          platform_default: platformDefault,\n          admin_default: adminDefault,\n          system,\n        }),\n        QS.form({\n          uuid,\n          role_names: roleNames,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Get a group in the tenant\n */\nexport function getGroup(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupWithPrincipalsAndRoles;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/groups/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n    })\n  );\n}\n/**\n * Update a group in the tenant\n */\nexport function updateGroup(\n  uuid: string,\n  group: Group,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: group,\n      })\n    )\n  );\n}\n/**\n * Delete a group in the tenant\n */\nexport function deleteGroup(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/groups/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * Add a principal to a group in the tenant\n */\nexport function addPrincipalToGroup(\n  uuid: string,\n  groupPrincipalIn: GroupPrincipalIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupWithPrincipalsAndRoles;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: ErrorNotFound;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/principals/`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: groupPrincipalIn,\n      })\n    )\n  );\n}\n/**\n * Get a list of principals from a group in the tenant\n */\nexport function getPrincipalsFromGroup(\n  uuid: string,\n  {\n    principalUsername,\n    limit,\n    offset,\n    orderBy,\n    usernameOnly,\n  }: {\n    principalUsername?: string;\n    limit?: number;\n    offset?: number;\n    orderBy?: 'username';\n    usernameOnly?: true | false;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PrincipalPagination;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/principals/${QS.query(\n        QS.explode({\n          principal_username: principalUsername,\n          limit,\n          offset,\n          order_by: orderBy,\n          username_only: usernameOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Remove a principal from a group in the tenant\n */\nexport function deletePrincipalFromGroup(\n  uuid: string,\n  usernames: string,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: ErrorNotFound;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/principals/${QS.query(\n        QS.explode({\n          usernames,\n        })\n      )}`,\n      {\n        ...opts,\n        method: 'DELETE',\n      }\n    )\n  );\n}\n/**\n * List the roles for a group in the tenant\n */\nexport function listRolesForGroup(\n  uuid: string,\n  {\n    exclude,\n    roleName,\n    roleDisplayName,\n    roleDescription,\n    roleSystem,\n    roleExternalTenant,\n    limit,\n    offset,\n    orderBy,\n  }: {\n    exclude?: boolean;\n    roleName?: string;\n    roleDisplayName?: string;\n    roleDescription?: string;\n    roleSystem?: boolean;\n    roleExternalTenant?: string;\n    limit?: number;\n    offset?: number;\n    orderBy?: 'name' | 'display_name' | 'modified' | 'policyCount';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupRolesPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/roles/${QS.query(\n        QS.explode({\n          exclude,\n          role_name: roleName,\n          role_display_name: roleDisplayName,\n          role_description: roleDescription,\n          role_system: roleSystem,\n          role_external_tenant: roleExternalTenant,\n          limit,\n          offset,\n          order_by: orderBy,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Add a role to a group in the tenant\n */\nexport function addRoleToGroup(\n  uuid: string,\n  groupRoleIn: GroupRoleIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: {\n            data: RoleOut[];\n          };\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/roles/`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: groupRoleIn,\n      })\n    )\n  );\n}\n/**\n * Remove a role from a group in the tenant\n */\nexport function deleteRoleFromGroup(\n  uuid: string,\n  roles: string,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/roles/${QS.query(\n        QS.explode({\n          roles,\n        })\n      )}`,\n      {\n        ...opts,\n        method: 'DELETE',\n      }\n    )\n  );\n}\n/**\n * Create a role for a tenant\n */\nexport function createRole(roleIn: RoleIn, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: RoleWithAccess;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/roles/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: roleIn,\n      })\n    )\n  );\n}\n/**\n * List the roles for a tenant\n */\nexport function listRoles(\n  {\n    limit,\n    offset,\n    name,\n    system,\n    displayName,\n    nameMatch,\n    scope,\n    orderBy,\n    addFields,\n    username,\n    application,\n    permission,\n    externalTenant,\n  }: {\n    limit?: number;\n    offset?: number;\n    name?: string;\n    system?: boolean;\n    displayName?: string;\n    nameMatch?: 'partial' | 'exact';\n    scope?: 'account' | 'principal';\n    orderBy?: 'name' | 'display_name' | 'modified' | 'policyCount';\n    addFields?: ('groups_in' | 'groups_in_count' | 'access')[];\n    username?: string;\n    application?: string;\n    permission?: string;\n    externalTenant?: string;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: RolePaginationDynamic;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          name,\n          system,\n          display_name: displayName,\n          name_match: nameMatch,\n          scope,\n          order_by: orderBy,\n          username,\n          application,\n          permission,\n          external_tenant: externalTenant,\n        }),\n        QS.form({\n          add_fields: addFields,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Get a role in the tenant\n */\nexport function getRole(\n  uuid: string,\n  {\n    scope,\n  }: {\n    scope?: 'account' | 'principal';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: RoleWithAccess;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/${QS.query(\n        QS.explode({\n          scope,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Delete a role in the tenant\n */\nexport function deleteRole(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/roles/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * Update a role in the tenant\n */\nexport function updateRole(\n  uuid: string,\n  roleWithAccess: RoleWithAccess,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: roleWithAccess,\n      })\n    )\n  );\n}\n/**\n * Patch a role in the tenant\n */\nexport function patchRole(\n  uuid: string,\n  rolePatch?: RolePatch,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: RoleWithAccess;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PATCH',\n        body: rolePatch,\n      })\n    )\n  );\n}\n/**\n * Get access for a role in the tenant\n */\nexport function getRoleAccess(\n  uuid: string,\n  {\n    limit,\n    offset,\n  }: {\n    limit?: number;\n    offset?: number;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: AccessPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/access/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Create a policy in a tenant\n */\nexport function createPolicies(\n  policyIn: PolicyIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: PolicyExtended;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/policies/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: policyIn,\n      })\n    )\n  );\n}\n/**\n * List the policies in the tenant\n */\nexport function listPolicies(\n  {\n    limit,\n    offset,\n    name,\n    scope,\n    groupName,\n    groupUuid,\n    orderBy,\n  }: {\n    limit?: number;\n    offset?: number;\n    name?: string;\n    scope?: 'account' | 'principal';\n    groupName?: string;\n    groupUuid?: string;\n    orderBy?: 'name' | 'modified';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PolicyPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/policies/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          name,\n          scope,\n          group_name: groupName,\n          group_uuid: groupUuid,\n          order_by: orderBy,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Get a policy in the tenant\n */\nexport function getPolicy(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PolicyExtended;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/policies/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n    })\n  );\n}\n/**\n * Update a policy in the tenant\n */\nexport function updatePolicy(\n  uuid: string,\n  policyIn: PolicyIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PolicyExtended;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/policies/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: policyIn,\n      })\n    )\n  );\n}\n/**\n * Delete a policy in the tenant\n */\nexport function deletePolicy(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/policies/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n */\nexport function getPrincipalAccess(\n  application: string,\n  {\n    username,\n    orderBy,\n    limit,\n    offset,\n  }: {\n    username?: string;\n    orderBy?: 'application' | 'resource_type' | 'verb';\n    limit?: number;\n    offset?: number;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: AccessPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/access/${QS.query(\n        QS.explode({\n          application,\n          username,\n          order_by: orderBy,\n          limit,\n          offset,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * List the permissions for a tenant\n */\nexport function listPermissions(\n  {\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n  }: {\n    limit?: number;\n    offset?: number;\n    orderBy?: 'application' | 'resource_type' | 'verb' | 'permission';\n    application?: string;\n    resourceType?: string;\n    verb?: string;\n    permission?: string;\n    excludeGlobals?: 'true' | 'false';\n    excludeRoles?: string;\n    allowedOnly?: 'true' | 'false';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PermissionPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/permissions/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          order_by: orderBy,\n          application,\n          resource_type: resourceType,\n          verb,\n          permission,\n          exclude_globals: excludeGlobals,\n          exclude_roles: excludeRoles,\n          allowed_only: allowedOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * List the available options for fields of permissions for a tenant\n */\nexport function listPermissionOptions(\n  field: 'application' | 'resource_type' | 'verb',\n  {\n    limit,\n    offset,\n    application,\n    resourceType,\n    verb,\n    excludeGlobals,\n    allowedOnly,\n  }: {\n    limit?: number;\n    offset?: number;\n    application?: string;\n    resourceType?: string;\n    verb?: string;\n    excludeGlobals?: 'true' | 'false';\n    allowedOnly?: 'true' | 'false';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PermissionOptionsPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/permissions/options/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          field,\n          application,\n          resource_type: resourceType,\n          verb,\n          exclude_globals: excludeGlobals,\n          allowed_only: allowedOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n","import {\n  AuthenticatedUser,\n  License,\n  LicenseService,\n  User,\n  header,\n} from '../service';\nimport { deleteSeatsById, getSeats, postSeats } from './entitlements-service';\nimport { listPrincipals } from './rbac';\nimport { Principal } from './rbac';\n\nexport class EntitlementsService implements LicenseService {\n  private baseUrl: string;\n\n  constructor(baseUrl?: string) {\n    this.baseUrl = baseUrl || '';\n  }\n\n  private async requestHeader(user: AuthenticatedUser) {\n    return await header(user.token, this.baseUrl);\n  }\n\n  async get(user: AuthenticatedUser): Promise<License> {\n    const result = await getSeats(\n      {\n        limit: 10,\n        offset: 0,\n      },\n      await this.requestHeader(user)\n    );\n    const available = result.allowed || 0;\n    const total = available - (result.consumed || 0);\n    return {\n      available,\n      total,\n    };\n  }\n\n  async seats(\n    user: AuthenticatedUser,\n    assigned: boolean | undefined = true\n  ): Promise<User[]> {\n    if (assigned) {\n      const result = await getSeats({}, await this.requestHeader(user));\n\n      return result.data.map(({ subscription_id, account_username }) => ({\n        id: subscription_id || '',\n        userName: account_username || '',\n        firstName: '',\n        lastName: '',\n        assigned: true,\n      }));\n    } else {\n      const header = await this.requestHeader(user);\n      const result = await listPrincipals({ usernameOnly: false }, header);\n\n      return (result.data as Principal[]).map(\n        ({ username, first_name, last_name }) => ({\n          id: username,\n          firstName: first_name || '',\n          lastName: last_name || '',\n          userName: username,\n          assigned: false,\n        })\n      );\n    }\n  }\n\n  async assign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    await Promise.all(\n      userIds.map(async (id) =>\n        postSeats({ account_username: id }, await this.requestHeader(user))\n      )\n    );\n    return Promise.resolve();\n  }\n\n  async unAssign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    await Promise.all(\n      userIds.map(async (id) =>\n        deleteSeatsById(id, await this.requestHeader(user))\n      )\n    );\n    return Promise.resolve();\n  }\n}\n","import { MockService } from './api/mock-service';\nimport { CiamAuthz } from './api/ciam-service';\nimport { EntitlementsService } from './entitlements-api/entitlements';\nimport * as Oazapfts from 'oazapfts/lib/runtime';\n\nexport type License = {\n  available: number;\n  total: number;\n};\n\nexport type User = {\n  id: string;\n  firstName: string;\n  lastName: string;\n  userName: string;\n  assigned: boolean;\n};\n\nexport type TokenFunction = () => Promise<string>;\n\nexport type AuthenticatedUser = {\n  orgId: string;\n  serviceId: string;\n  token: TokenFunction;\n};\n\nexport const header = async (\n  token: TokenFunction,\n  baseUrl: string\n): Promise<Oazapfts.RequestOpts> => {\n  const tokenString = await token();\n  return {\n    headers: {\n      Authorization: `Bearer ${tokenString}`,\n    },\n    baseUrl,\n  };\n};\n\nexport interface LicenseService {\n  get(user: AuthenticatedUser): Promise<License>;\n\n  seats(user: AuthenticatedUser, assigned?: boolean): Promise<User[]>;\n\n  assign(user: AuthenticatedUser, userIds: string[]): Promise<void>;\n\n  unAssign(user: AuthenticatedUser, userIds: string[]): Promise<void>;\n}\n\nexport function getService(\n  serviceKey: string,\n  baseUrl?: string\n): LicenseService {\n  switch (serviceKey) {\n    case 'CIAM_Authz':\n      return new CiamAuthz(baseUrl);\n    case 'entitlements':\n      return new EntitlementsService(baseUrl);\n    case 'mock':\n      return new MockService();\n    default:\n      throw new Error('no implementation found for ' + serviceKey);\n  }\n}\n","import { Context, PropsWithChildren, createContext, useContext } from 'react';\nimport { LicenseService, getService } from '../client/service';\n\ntype ServiceContextProps = {\n  serviceName: string;\n  baseUrl?: string;\n};\n\nexport const ServiceContext = createContext<LicenseService | undefined>(\n  undefined\n);\n\nfunction useRequiredContext<T>(context: Context<T>): NonNullable<T> {\n  const resolved = useContext(context);\n\n  if (resolved !== undefined && resolved !== null) {\n    return resolved;\n  }\n\n  throw new Error(\n    `No provider found for context, make sure it is included in your component hierarchy.`\n  );\n}\n\nexport const useService = () => useRequiredContext(ServiceContext);\n\nexport const ServiceContextProvider = ({\n  serviceName,\n  baseUrl,\n  children,\n}: PropsWithChildren<ServiceContextProps>) => {\n  return (\n    <ServiceContext.Provider value={getService(serviceName, baseUrl)}>\n      {children}\n    </ServiceContext.Provider>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Icon,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport type { VoidFunctionComponent } from 'react';\n\nconst DangerIcon: VoidFunctionComponent = () => (\n  <Icon status={'danger'} size={'xl'}>\n    <ExclamationCircleIcon />\n  </Icon>\n);\n\nexport const EmptyStateNoSubscription: VoidFunctionComponent = () => {\n  return (\n    <EmptyState isFullHeight={true}>\n      <EmptyStateIcon component={DangerIcon} variant={'container'} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        Your organization no longer has an Seats Administration subscription.\n      </Title>\n      <EmptyStateBody>\n        Please contact Red Hat if there is an issue with your subscription or if\n        you wish to continue.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport { VoidFunctionComponent } from 'react';\n\nexport type RemoveUsersModalProps = {\n  usersToRemove: number;\n  onOk: () => void;\n};\n\nconst RemoveUsersModal: VoidFunctionComponent<RemoveUsersModalProps> = ({\n  usersToRemove,\n  onOk,\n}) => {\n  return (\n    <Modal\n      id=\"remove-users-modal\"\n      variant={ModalVariant.small}\n      isOpen={true}\n      aria-label={'Remove users from seats'}\n      title={'Remove users from seats'}\n      titleIconVariant=\"warning\"\n      showClose={false}\n      aria-describedby=\"modal-message\"\n      actions={[\n        <Button onClick={onOk} key={1} variant={ButtonVariant.primary}>\n          Ok\n        </Button>,\n      ]}\n    >\n      Your organization has decreased the amount of seats available. Please\n      remove {usersToRemove} users from their seats to continue the\n      subscription.\n    </Modal>\n  );\n};\n\nexport { RemoveUsersModal };\n","import {\n  Label,\n  Level,\n  LevelItem,\n  PageSection,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport { VoidFunctionComponent } from 'react';\n\nexport type SeatsHeaderProps = {\n  availableSeats: number;\n  totalSeats: number;\n};\nexport const SeatsHeader: VoidFunctionComponent<SeatsHeaderProps> = ({\n  availableSeats,\n  totalSeats,\n}) => {\n  return (\n    <PageSection variant={'light'} hasShadowBottom={true}>\n      <TextContent>\n        <Title headingLevel={'h1'}>Seats Administration</Title>\n        <Level>\n          <LevelItem>\n            <Text>\n              This group contains all users assigned seats within your\n              organization.\n            </Text>\n          </LevelItem>\n          {totalSeats > 0 && (\n            <LevelItem>\n              <Text>\n                Seats available:&nbsp;\n                <Label isCompact={true}>\n                  {availableSeats} of {totalSeats}\n                </Label>\n              </Text>\n            </LevelItem>\n          )}\n        </Level>\n      </TextContent>\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport type { VoidFunctionComponent } from 'react';\n\nexport type EmptyStateNoAssignedSeatProps = {\n  totalSeats: number;\n  onAddUsers: () => void;\n};\n\nexport const EmptyStateNoAssignedSeat: VoidFunctionComponent<\n  EmptyStateNoAssignedSeatProps\n> = ({ totalSeats, onAddUsers }) => {\n  return (\n    <EmptyState isFullHeight={true}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        There are currently no users in your organization assigned seats.\n        <br />\n        Your organization has {totalSeats} seats available.\n      </Title>\n      <EmptyStateBody>\n        Please add users by using the button below.\n      </EmptyStateBody>\n      <Button\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={() => onAddUsers()}\n      >\n        Add users\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport type { VoidFunctionComponent } from 'react';\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        Adjust your filters and try again, or&nbsp;\n        <a onClick={onClearAllFilters}>clear all filters</a>.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { Button } from '@patternfly/react-core';\nimport { ActionsColumn } from '@patternfly/react-table';\nimport type { TableViewProps } from '@rhoas/app-services-ui-components';\nimport { TableView } from '@rhoas/app-services-ui-components';\nimport { User } from '../client/service';\nimport { Link } from 'react-router-dom';\nimport { EmptyStateNoAssignedSeat } from './EmptyStateNoAssignedSeat';\nimport {\n  EmptyStateNoResults,\n  EmptyStateNoResultsProps,\n} from './EmptyStateNoResults';\n\nimport './users-with-seat-table.css';\n\nexport const Columns = ['userName', 'firstName', 'lastName'] as const;\n\nexport const labels: { [key in (typeof Columns)[number]]: string } = {\n  userName: 'Username',\n  firstName: 'First name',\n  lastName: 'Last name',\n};\n\nexport type UsersWithSeatTableProps = {\n  users: Array<User> | undefined | null;\n  getUrlForUser: (row: User) => string;\n  totalSeats: number | undefined;\n  usernames: string[];\n  canAddUser: boolean;\n  onAddUser: () => void;\n  isUserChecked: (user: User) => boolean;\n  onCheckUser: (user: User, isChecked: boolean) => void;\n  onSearchUsername: (value: string) => void;\n  onRemoveUsernameChip: (value: string) => void;\n  onRemoveUsernameChips: () => void;\n  onRemoveSeat: (row?: User) => void;\n} & Pick<\n  TableViewProps<User, (typeof Columns)[number]>,\n  | 'itemCount'\n  | 'page'\n  | 'perPage'\n  | 'onPageChange'\n  | 'isColumnSortable'\n  | 'onClearAllFilters'\n> &\n  EmptyStateNoResultsProps;\n\nexport const UsersWithSeatTable = ({\n  users,\n  itemCount,\n  page,\n  perPage,\n  usernames,\n  totalSeats,\n  getUrlForUser,\n  isColumnSortable,\n  canAddUser,\n  isUserChecked,\n  onCheckUser,\n  onPageChange,\n  onRemoveSeat,\n  onAddUser,\n  // onSearchUsername,\n  // onRemoveUsernameChip,\n  // onRemoveUsernameChips,\n  onClearAllFilters,\n}: UsersWithSeatTableProps) => {\n  const breakpoint = 'lg';\n\n  const isFiltered = usernames.length > 0;\n\n  return (\n    <div id=\"seatTable\">\n      <TableView\n        data={users}\n        columns={Columns}\n        renderHeader={({ column, Th, key }) => (\n          <Th key={key}>{labels[column]}</Th>\n        )}\n        renderCell={({ column, row, Td, key }) => (\n          <Td key={key} dataLabel={labels[column]}>\n            {(() => {\n              switch (column) {\n                case 'userName':\n                  return (\n                    <Button\n                      variant=\"link\"\n                      component={(props) => (\n                        <Link to={getUrlForUser(row)} {...props}>\n                          {row.userName}\n                        </Link>\n                      )}\n                      isInline\n                    />\n                  );\n\n                default:\n                  return row[column];\n              }\n            })()}\n          </Td>\n        )}\n        renderActions={({ row }) => {\n          return (\n            <ActionsColumn\n              rowData={hackZIndex}\n              items={[\n                {\n                  title: 'Remove seat',\n                  onClick: () => onRemoveSeat(row),\n                },\n              ]}\n            />\n          );\n        }}\n        isColumnSortable={isColumnSortable}\n        toolbarBreakpoint={breakpoint}\n        // filters={{\n        //   ['Username']: {\n        //     type: 'search',\n        //     chips: usernames,\n        //     onSearch: onSearchUsername,\n        //     onRemoveChip: onRemoveUsernameChip,\n        //     onRemoveGroup: onRemoveUsernameChips,\n        //     validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n        //     errorMessage: 'Invalid string',\n        //   },\n        // }}\n        actions={[\n          ...(canAddUser\n            ? [\n                {\n                  label: 'Assign user(s)',\n                  onClick: onAddUser,\n                  isPrimary: true,\n                },\n              ]\n            : []),\n          {\n            label: 'Remove user(s)',\n            onClick: () => onRemoveSeat(),\n            isPrimary: false,\n          },\n        ]}\n        itemCount={itemCount}\n        page={page}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        onClearAllFilters={onClearAllFilters}\n        ariaLabel={'Seats Administration users'}\n        isFiltered={isFiltered}\n        isRowChecked={({ row }) => isUserChecked(row)}\n        onCheck={({ row }, isChecked) => onCheckUser(row, isChecked)}\n        emptyStateNoData={\n          <EmptyStateNoAssignedSeat\n            totalSeats={totalSeats || 0}\n            onAddUsers={onAddUser}\n          />\n        }\n        emptyStateNoResults={\n          <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n        }\n      />\n    </div>\n  );\n};\n\nconst hackZIndex = {\n  actionProps: {\n    style: { zIndex: 9999 },\n  },\n};\n","import {\n  Button,\n  Modal,\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { User } from '../client/service';\nimport { useState } from 'react';\n\ntype ConfirmRemoveDialogProps = {\n  users: User[];\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nconst PAGE_SIZE = 5;\n\nexport const ConfirmRemoveDialog = ({\n  users,\n  onConfirm,\n  onCancel,\n}: ConfirmRemoveDialogProps) => {\n  const [usersPage, setUserPage] = useState<User[]>(users.slice(0, PAGE_SIZE));\n  const [pageSize, setPageSize] = useState(PAGE_SIZE);\n  const [page, setPage] = useState(1);\n\n  return (\n    <Modal\n      title=\"Remove users\"\n      titleIconVariant=\"warning\"\n      isOpen\n      variant=\"small\"\n      actions={[\n        <Button key=\"remove\" variant=\"danger\" onClick={() => onConfirm()}>\n          Remove user(s)\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={() => onCancel()}>\n          Cancel\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      Are you sure you want to remove the user(s) below from Project Wisdom\n      {users.length > 5 ? (\n        <>\n          <TableComposable variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th>Name</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {usersPage.map((user) => (\n                <Tr key={user.id}>\n                  <Td dataLabel=\"Name\">\n                    {user.firstName} {user.lastName}\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n          <Pagination\n            isCompact\n            perPageComponent=\"button\"\n            itemCount={users.length}\n            perPage={pageSize}\n            page={page}\n            variant={PaginationVariant.bottom}\n            perPageOptions={[\n              { title: '5', value: 5 },\n              { title: '10', value: 10 },\n              { title: '20', value: 20 },\n            ]}\n            onPerPageSelect={(_, pageSize) => {\n              setPageSize(pageSize);\n              setUserPage(users.slice((page - 1) * pageSize, page * pageSize));\n            }}\n            onSetPage={(_, page) => {\n              setPage(page);\n              setUserPage(users.slice((page - 1) * pageSize, page * pageSize));\n            }}\n          />\n        </>\n      ) : (\n        <p className=\"pf-u-pt-md\">\n          {users.map((user, i) => (\n            <>\n              <b>\n                {user.firstName} {user.lastName}\n              </b>\n              {i !== users.length - 1 ? ', ' : ''}\n            </>\n          ))}\n        </p>\n      )}\n    </Modal>\n  );\n};\n","import { Alert, Page, PageSection } from '@patternfly/react-core';\nimport {\n  usePaginationSearchParams,\n  useURLSearchParamsChips,\n} from '@rhoas/app-services-ui-components';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { EmptyStateNoSubscription } from '../Components/EmptyStateNoSubscription';\nimport { RemoveUsersModal } from '../Components/RemoveUsersModal';\nimport { SeatsHeader } from '../Components/SeatsHeader';\nimport { useService } from '../Components/ServiceProvider';\nimport { UsersWithSeatTable } from '../Components/UsersWithSeatTable';\nimport { License, User } from '../client/service';\nimport { ConfirmRemoveDialog } from '../Components/ConfirmRemoveDialog';\nimport { PageParams } from './AddUsersPage';\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport const UsersPage = ({\n  user,\n  onSuccess,\n  onError,\n}: Optional<PageParams, 'onSuccess' | 'onError'>) => {\n  const history = useHistory();\n  const [checkedUsers, setCheckedUsers] = useState<User[]>([]);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const usernameChips = useURLSearchParamsChips(\n    'username',\n    resetPaginationQuery\n  );\n\n  const service = useService();\n  const queryClient = useQueryClient();\n\n  const subscriptions = useQuery<License>({\n    queryKey: ['subscriptions'],\n    queryFn: () => service.get(user),\n  });\n\n  const users = useQuery<User[]>({\n    queryKey: ['users', { page, perPage, usernames: usernameChips.chips }],\n    queryFn: () => service.seats(user),\n  });\n\n  const negativeSeats = (subscriptions.data?.available || 0) < 0;\n  const usersToRemove = Math.abs(subscriptions.data?.available || 0);\n\n  const cantAddUsers =\n    (subscriptions.data?.total || 0) > 0 && subscriptions.data?.available === 0;\n\n  const { mutate } = useMutation(\n    async (arg: User[]) => {\n      await service.unAssign(\n        user,\n        arg.map(({ id }) => id)\n      );\n      setConfirmOpen(false);\n      setCheckedUsers([]);\n    },\n    {\n      onSuccess: () => {\n        onSuccess && onSuccess('Successfully removed users');\n        queryClient.invalidateQueries({ queryKey: ['users'] });\n      },\n      onError: (error) => {\n        onError && onError('there was an error: ' + error);\n      },\n    }\n  );\n  return (\n    <Page>\n      <SeatsHeader\n        totalSeats={subscriptions.data?.total || 0}\n        availableSeats={subscriptions.data?.available || 0}\n      />\n      {subscriptions.data?.total === 0 && <EmptyStateNoSubscription />}\n      {negativeSeats && usersToRemove && (\n        <RemoveUsersModal\n          usersToRemove={usersToRemove}\n          onOk={() => history.push('/remove-users')}\n        />\n      )}\n      {confirmOpen && (\n        <ConfirmRemoveDialog\n          users={checkedUsers}\n          onConfirm={() => mutate(checkedUsers)}\n          onCancel={() => setConfirmOpen(false)}\n        />\n      )}\n      <PageSection isFilled>\n        {cantAddUsers ? (\n          <Alert\n            title={\n              \"There are 0 seats left in your organization's subscription. Contact Red Hat to manage your Seats Administration license.\"\n            }\n            variant=\"warning\"\n            isInline\n          />\n        ) : null}\n        {subscriptions.data?.total !== 0 && (\n          <UsersWithSeatTable\n            totalSeats={subscriptions.data?.total}\n            users={users.data}\n            itemCount={users.data?.length}\n            canAddUser={!cantAddUsers}\n            page={page}\n            perPage={perPage}\n            onPageChange={setPagination}\n            usernames={usernameChips.chips}\n            onSearchUsername={usernameChips.add}\n            onRemoveUsernameChip={usernameChips.remove}\n            onRemoveUsernameChips={usernameChips.clear}\n            onClearAllFilters={usernameChips.clear}\n            getUrlForUser={(user) => `#${user.id}`}\n            onAddUser={() => {\n              history.push('/add-users');\n            }}\n            isUserChecked={(user) => checkedUsers.includes(user)}\n            onCheckUser={(user, isChecked) => {\n              setCheckedUsers(\n                isChecked\n                  ? [...checkedUsers, user]\n                  : checkedUsers.filter((u) => u !== user)\n              );\n            }}\n            onRemoveSeat={(user) => {\n              if (user) setCheckedUsers([user]);\n              setConfirmOpen(true);\n            }}\n          />\n        )}\n      </PageSection>\n    </Page>\n  );\n};\n","import type { TableViewProps } from '@rhoas/app-services-ui-components';\nimport { TableView } from '@rhoas/app-services-ui-components';\nimport { User } from '../client/service';\nimport {\n  EmptyStateNoResults,\n  EmptyStateNoResultsProps,\n} from './EmptyStateNoResults';\nimport { Columns, labels } from './UsersWithSeatTable';\n\nexport type UsersPickerTableProps = {\n  users: Array<User> | undefined | null;\n  isUserChecked: (row: User) => boolean;\n  usernames: string[];\n  onSearchUsername: (value: string) => void;\n  onRemoveUsernameChip: (value: string) => void;\n  onRemoveUsernameChips: () => void;\n  onCheckUser: (row: User, isChecked: boolean) => void;\n} & Pick<\n  TableViewProps<User, (typeof Columns)[number]>,\n  | 'itemCount'\n  | 'page'\n  | 'perPage'\n  | 'onPageChange'\n  | 'isColumnSortable'\n  | 'onClearAllFilters'\n> &\n  EmptyStateNoResultsProps;\n\nexport const UsersPickerTable = ({\n  users,\n  itemCount,\n  page,\n  perPage,\n  usernames,\n  isColumnSortable,\n  isUserChecked,\n  onPageChange,\n  // onSearchUsername,\n  // onRemoveUsernameChip,\n  // onRemoveUsernameChips,\n  onClearAllFilters,\n  onCheckUser,\n}: UsersPickerTableProps) => {\n  const breakpoint = 'lg';\n\n  const isFiltered = usernames.length > 0;\n  const startIndex = (page - 1) * (perPage || 20);\n\n  return (\n    <TableView\n      data={users?.slice(startIndex, startIndex + (perPage || 20))}\n      columns={Columns}\n      renderHeader={({ column, Th, key }) => (\n        <Th key={key}>{labels[column]}</Th>\n      )}\n      renderCell={({ column, row, Td, key }) => (\n        <Td key={key} dataLabel={labels[column]}>\n          {row[column]}\n        </Td>\n      )}\n      isColumnSortable={isColumnSortable}\n      isRowChecked={({ row }) => isUserChecked(row)}\n      onCheck={({ row }, isChecked) => onCheckUser(row, isChecked)}\n      toolbarBreakpoint={breakpoint}\n      // filters={{\n      //   ['Username']: {\n      //     type: 'search',\n      //     chips: usernames,\n      //     onSearch: onSearchUsername,\n      //     onRemoveChip: onRemoveUsernameChip,\n      //     onRemoveGroup: onRemoveUsernameChips,\n      //     validate: (value) => /^[a-z]([-a-z0-9]*[a-z0-9])?$/.test(value),\n      //     errorMessage: 'Invalid string',\n      //   },\n      // }}\n      itemCount={itemCount}\n      page={page}\n      perPage={perPage}\n      onPageChange={onPageChange}\n      onClearAllFilters={onClearAllFilters}\n      ariaLabel={'Seats Administration users'}\n      isFiltered={isFiltered}\n      emptyStateNoData={<>{/* this can't happen */}</>}\n      emptyStateNoResults={\n        <EmptyStateNoResults onClearAllFilters={onClearAllFilters} />\n      }\n    />\n  );\n};\n","import { Alert, Button, ButtonVariant, Modal } from '@patternfly/react-core';\nimport {\n  usePaginationSearchParams,\n  useURLSearchParamsChips,\n} from '@rhoas/app-services-ui-components';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AuthenticatedUser, License, User } from '../client/service';\nimport { useCallback, useState } from 'react';\nimport { useService } from '../Components/ServiceProvider';\nimport { UsersPickerTable } from '../Components/UsersPickerTable';\nimport { useHistory } from 'react-router-dom';\n\nexport type PageParams = {\n  user: AuthenticatedUser;\n  onSuccess: (message: string) => void;\n  onError: (message: string) => void;\n};\n\nexport const AddUsersPage = ({ user, onSuccess, onError }: PageParams) => {\n  const history = useHistory();\n  const service = useService();\n\n  const close = () => history.push('/');\n\n  const subscriptions = useQuery<License>({\n    queryKey: ['subscriptions'],\n    queryFn: () => service.get(user),\n  });\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const usernameChips = useURLSearchParamsChips('name', resetPaginationQuery);\n  const queryClient = useQueryClient();\n  const users = useQuery<User[]>({\n    queryKey: [\n      'availableUsers',\n      { page, perPage, usernames: usernameChips.chips },\n    ],\n    queryFn: () => service.seats(user, false),\n  });\n\n  const { mutate, isLoading } = useMutation(\n    () => service.assign(user, checkedUsers),\n    {\n      onSuccess: () => {\n        close();\n        onSuccess('Successfully assigned users');\n        queryClient.invalidateQueries({\n          queryKey: ['users', 'availableUsers', 'subscriptions'],\n        });\n      },\n      onError: (error) => {\n        onError('there was an error: ' + error);\n      },\n    }\n  );\n\n  const [checkedUsers, setCheckedUsers] = useState<string[]>([]);\n  const assignedSeats =\n    (subscriptions.data?.total || 0) - (subscriptions.data?.available || 0);\n  const isAddDisabled =\n    subscriptions.data?.total === undefined\n      ? true\n      : checkedUsers.length > 0\n      ? checkedUsers.length + assignedSeats > subscriptions.data.total\n      : true;\n\n  return (\n    <Modal\n      isOpen\n      title=\"Assign users\"\n      variant=\"medium\"\n      onClose={close}\n      actions={[\n        <Button\n          key=\"assign\"\n          onClick={() => mutate()}\n          isDisabled={isAddDisabled}\n          isLoading={isLoading}\n        >\n          Assign\n        </Button>,\n        <Button key=\"cancel\" onClick={close} variant={ButtonVariant.link}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      {checkedUsers.length + assignedSeats >\n        (subscriptions.data?.total || 0) && (\n        <Alert\n          variant=\"warning\"\n          isInline\n          title=\"Your organization does not have enough Project Wisdom seats for the assignments below\"\n        />\n      )}\n      <UsersPickerTable\n        users={users.data}\n        itemCount={users.data?.length}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        usernames={usernameChips.chips}\n        onSearchUsername={usernameChips.add}\n        onRemoveUsernameChip={usernameChips.remove}\n        onRemoveUsernameChips={usernameChips.clear}\n        onClearAllFilters={usernameChips.clear}\n        isUserChecked={(user) => checkedUsers.includes(user.id)}\n        onCheckUser={(user, isChecked) => {\n          setCheckedUsers(\n            isChecked\n              ? [...checkedUsers, user.id]\n              : checkedUsers.filter((u) => u !== user.id)\n          );\n        }}\n      />\n    </Modal>\n  );\n};\n","import { Button, ButtonVariant, Modal } from '@patternfly/react-core';\nimport {\n  usePaginationSearchParams,\n  useURLSearchParamsChips,\n} from '@rhoas/app-services-ui-components';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { License, User } from '../client/service';\nimport { useCallback, useState } from 'react';\nimport { useService } from '../Components/ServiceProvider';\nimport { UsersPickerTable } from '../Components/UsersPickerTable';\nimport { useHistory } from 'react-router-dom';\nimport { PageParams } from './AddUsersPage';\n\nexport const RemoveUsersPage = ({ user, onSuccess, onError }: PageParams) => {\n  const history = useHistory();\n  const service = useService();\n\n  const subscriptions = useQuery<License>({\n    queryKey: ['subscriptions'],\n    queryFn: () => service.get(user),\n  });\n\n  const { page, perPage, setPagination, setPaginationQuery } =\n    usePaginationSearchParams();\n  const resetPaginationQuery = useCallback(\n    () => setPaginationQuery(1, perPage),\n    [perPage, setPaginationQuery]\n  );\n\n  const usernameChips = useURLSearchParamsChips(\n    'username',\n    resetPaginationQuery\n  );\n\n  const queryClient = useQueryClient();\n  const users = useQuery<User[]>({\n    queryKey: [\n      'assignedUsers',\n      { page, perPage, usernames: usernameChips.chips },\n    ],\n    queryFn: () => service.seats(user),\n  });\n\n  const [checkedUsers, setCheckedUsers] = useState<string[]>([]);\n\n  const assignedSeats =\n    (subscriptions.data?.total || 0) - (subscriptions.data?.available || 0);\n\n  const { mutate, isLoading } = useMutation(\n    () => {\n      setCheckedUsers([]);\n      return service.unAssign(user, checkedUsers);\n    },\n    {\n      onSuccess: () => {\n        onSuccess('Successfully removed users');\n        queryClient.invalidateQueries({\n          queryKey: ['users', 'assignedUsers', 'subscriptions'],\n        });\n      },\n      onError: (error) => {\n        onError('there was an error: ' + error);\n      },\n    }\n  );\n\n  const close = () => history.push('/');\n\n  return (\n    <Modal\n      isOpen\n      title={`Remove ${assignedSeats} users from their assigned seats`}\n      variant=\"medium\"\n      onClose={close}\n      actions={[\n        <Button\n          key=\"remove\"\n          onClick={() => mutate()}\n          isDisabled={checkedUsers.length > assignedSeats}\n          isLoading={isLoading}\n        >\n          Remove\n        </Button>,\n        <Button\n          key=\"cancel\"\n          onClick={close}\n          variant={ButtonVariant.link}\n          isDisabled={isLoading}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <UsersPickerTable\n        users={users.data}\n        itemCount={users.data?.length}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        usernames={usernameChips.chips}\n        onSearchUsername={usernameChips.add}\n        onRemoveUsernameChip={usernameChips.remove}\n        onRemoveUsernameChips={usernameChips.clear}\n        onClearAllFilters={usernameChips.clear}\n        isUserChecked={(user) => checkedUsers.includes(user.id)}\n        onCheckUser={(user, isChecked) => {\n          setCheckedUsers(\n            isChecked\n              ? [...checkedUsers, user.id]\n              : checkedUsers.filter((u) => u !== user.id)\n          );\n        }}\n      />\n    </Modal>\n  );\n};\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { AuthenticatedUser } from './client/service';\nimport { ServiceContextProvider } from './Components/ServiceProvider';\nimport { UsersPage } from './Pages/UsersPage';\nimport { AddUsersPage } from './Pages/AddUsersPage';\nimport { RemoveUsersPage } from './Pages/RemoveUsersPage';\n\nexport const Routes = () => {\n  const [user, setUser] = useState<AuthenticatedUser>();\n  const dispatch = useDispatch();\n  const handleAlert = (\n    message: string,\n    type:\n      | 'default'\n      | 'success'\n      | 'danger'\n      | 'warning'\n      | 'info'\n      | undefined = 'success'\n  ) => {\n    dispatch(\n      addNotification({\n        variant: type,\n        title: message,\n      })\n    );\n  };\n  const handleError = (message: string) => handleAlert(message, 'danger');\n\n  const {\n    auth: { getToken, getUser },\n  } = useChrome();\n\n  useEffect(() => {\n    (async () => {\n      const user = await getUser();\n      if (user)\n        setUser({\n          orgId: user.identity.org_id,\n          serviceId: 'smarts',\n          token: getToken,\n        } as AuthenticatedUser);\n    })();\n  }, []);\n\n  if (!user) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      }\n    >\n      <ServiceContextProvider\n        serviceName={process.env.SERVICE_KEY!}\n        baseUrl={process.env.BASE_URL}\n      >\n        <Router basename={getBaseName(window.location.pathname) + '/seats'}>\n          <Switch>\n            <Route path=\"/add-users\">\n              <AddUsersPage\n                user={user}\n                onSuccess={handleAlert}\n                onError={handleError}\n              />\n            </Route>\n            <Route path=\"/remove-users\">\n              <RemoveUsersPage\n                user={user}\n                onSuccess={handleAlert}\n                onError={handleError}\n              />\n            </Route>\n            <Route path=\"/\">\n              <UsersPage\n                user={user}\n                onSuccess={handleAlert}\n                onError={handleError}\n              />\n            </Route>\n            {/* Finally, catch all unmatched routes */}\n            <Route>\n              <InvalidObject />\n            </Route>\n          </Switch>\n        </Router>\n      </ServiceContextProvider>\n    </Suspense>\n  );\n};\n","import NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { Fragment, useEffect } from 'react';\nimport { Reducer } from 'redux';\nimport './App.scss';\n\nimport { Routes } from './Routes';\n\nconst App = () => {\n  const { updateDocumentTitle } = useChrome();\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n    // You can use directly the name of your app\n    updateDocumentTitle('Seats Administration');\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes />\n    </Fragment>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-unused-vars */\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport type ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport type { Middleware, Reducer } from 'redux';\n\nexport let registry: ReducerRegistry<Reducer>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n"],"names":["get","Promise","fetch","json","totalSeats","availableSeats","total","available","seats","assign","resolve","unAssign","oazapfts","baseUrl","licenseServiceGetLicense","orgId","serviceId","opts","ok","fetchJson","encodeURIComponent","licenseServiceModifySeats","body","method","licenseServiceGetSeats","includeUsers","filter","this","token","requestHeader","result","Number","seatsAvailable","seatsTotal","assigned","users","map","id","firstName","lastName","userName","header","user","userIds","modify","unassign","getSeats","limit","offset","postSeats","seatRequest","deleteSeatsById","listPrincipals","matchCriteria","usernames","sortOrder","email","status","adminOnly","orderBy","usernameOnly","match_criteria","sort_order","admin_only","order_by","username_only","allowed","consumed","data","username","all","account_username","tokenString","headers","Authorization","getService","serviceKey","CiamAuthz","EntitlementsService","MockService","Error","ServiceContext","createContext","undefined","useService","context","resolved","useContext","useRequiredContext","ServiceContextProvider","serviceName","children","Provider","value","DangerIcon","Icon","size","EmptyStateNoSubscription","EmptyState","isFullHeight","EmptyStateIcon","component","variant","Title","headingLevel","EmptyStateBody","RemoveUsersModal","usersToRemove","onOk","Modal","ModalVariant","small","isOpen","title","titleIconVariant","showClose","actions","Button","onClick","ButtonVariant","primary","SeatsHeader","PageSection","hasShadowBottom","TextContent","Level","LevelItem","Text","Label","isCompact","EmptyStateNoAssignedSeat","onAddUsers","icon","ouiaId","EmptyStateNoResults","onClearAllFilters","EmptyStateVariant","xs","Columns","labels","UsersWithSeatTable","itemCount","page","perPage","getUrlForUser","isColumnSortable","canAddUser","isUserChecked","onCheckUser","onPageChange","onRemoveSeat","onAddUser","isFiltered","length","TableView","columns","renderHeader","column","Th","key","renderCell","row","Td","dataLabel","props","Link","to","isInline","renderActions","ActionsColumn","rowData","hackZIndex","items","toolbarBreakpoint","label","isPrimary","ariaLabel","isRowChecked","onCheck","isChecked","emptyStateNoData","emptyStateNoResults","actionProps","style","zIndex","ConfirmRemoveDialog","onConfirm","onCancel","useState","slice","usersPage","setUserPage","pageSize","setPageSize","setPage","onClose","TableComposable","Thead","Tr","Tbody","Pagination","perPageComponent","PaginationVariant","bottom","perPageOptions","onPerPageSelect","_","onSetPage","className","i","UsersPage","onSuccess","onError","history","useHistory","checkedUsers","setCheckedUsers","confirmOpen","setConfirmOpen","usePaginationSearchParams","setPagination","setPaginationQuery","resetPaginationQuery","useCallback","usernameChips","useURLSearchParamsChips","service","queryClient","subscriptions","useQuery","queryKey","queryFn","chips","negativeSeats","Math","abs","cantAddUsers","mutate","useMutation","arg","invalidateQueries","error","Page","push","isFilled","Alert","onSearchUsername","add","onRemoveUsernameChip","remove","onRemoveUsernameChips","clear","includes","u","UsersPickerTable","startIndex","AddUsersPage","close","isLoading","assignedSeats","isAddDisabled","isDisabled","link","RemoveUsersPage","Routes","setUser","dispatch","handleAlert","message","type","handleError","useChrome","getToken","getUser","useEffect","identity","org_id","Suspense","fallback","Bullseye","Spinner","basename","window","location","pathname","Switch","Route","path","InvalidObject","updateDocumentTitle","register","notifications","Fragment","init","errorDescriptionKey","middleware"],"sourceRoot":""}