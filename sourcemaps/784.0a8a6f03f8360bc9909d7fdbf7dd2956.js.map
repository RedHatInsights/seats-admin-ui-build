{"version":3,"file":"js/784.e7149ef2e8dd6e8d6cb6.js","mappings":"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","sources":["webpack:///./src/client/api/mock-service.ts","webpack:///./src/client/api/ciam-authz.ts","webpack:///./src/client/api/ciam-service.ts","webpack:///./src/client/entitlements-api/entitlements-service.ts","webpack:///./src/client/entitlements-api/rbac.ts","webpack:///./src/client/entitlements-api/entitlements.ts","webpack:///./src/client/service.ts","webpack:///./src/Components/ServiceProvider.tsx","webpack:///./src/Components/AppLink.tsx","webpack:///./src/Components/EmptyStateNoSubscription.tsx","webpack:///./src/Components/RemoveUsersModal.tsx","webpack:///./src/Components/SeatsHeader.tsx","webpack:///./src/Components/EmptyStateNoAssignedSeat.tsx","webpack:///./src/Components/EmptyStateNoResults.tsx","webpack:///./src/Components/UsersWithSeatTable.tsx","webpack:///./src/Components/ConfirmRemoveDialog.tsx","webpack:///./src/Pages/usePagination.tsx","webpack:///./src/Pages/UsersPage.tsx","webpack:///./src/Pages/AddUsersPage.tsx","webpack:///./src/Pages/RemoveUsersPage.tsx","webpack:///./src/AppRoutes.tsx","webpack:///./src/App.tsx","webpack:///./src/store/index.ts"],"sourcesContent":["import { License, LicenseService, UserResult } from '../service';\n\ntype MockLicense = {\n  totalSeats: number;\n  availableSeats: number;\n  assignedSeats: number;\n};\n\nexport class MockService implements LicenseService {\n  async get(): Promise<License> {\n    const { totalSeats, availableSeats }: MockLicense = await (\n      await fetch('/aw-api/subscriptions')\n    ).json();\n    return {\n      total: totalSeats,\n      available: availableSeats,\n    };\n  }\n\n  async seats(): Promise<UserResult> {\n    return await (await fetch('/aw-api/users')).json();\n  }\n\n  assign(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  unAssign(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * CIAM Authz\n * version not set\n * DO NOT MODIFY - This file has been generated using oazapfts.\n * See https://www.npmjs.com/package/oazapfts\n */\nimport * as Oazapfts from 'oazapfts/lib/runtime';\nimport * as QS from 'oazapfts/lib/runtime/query';\nexport const defaults: Oazapfts.RequestOpts = {\n  baseUrl: '/',\n};\nconst oazapfts = Oazapfts.runtime(defaults);\nexport const servers = {};\nexport type V1AlphaCheckPermissionRequest = {\n  subject?: string;\n  operation?: string;\n  resourcetype?: string;\n  resourceid?: string;\n};\nexport type V1AlphaCheckPermissionResponse = {\n  result?: boolean;\n  description?: string;\n};\nexport type ProtobufAny = {\n  '@type'?: string;\n  [key: string]: any;\n};\nexport type RpcStatus = {\n  code?: number;\n  message?: string;\n  details?: ProtobufAny[];\n};\nexport type V1AlphaEmpty = object;\nexport type EntitleOrgResponseIsTheResponseWhenEntitlingAnOrg = object;\nexport type ImportOrgResponse = {\n  importedUsersCount?: string;\n  notImportedUsersCount?: string;\n};\nexport type V1AlphaGetLicenseResponse = {\n  seatsTotal?: string;\n  seatsAvailable?: string;\n};\nexport type V1AlphaModifySeatsResponse = object;\nexport type V1AlphaGetSeatsUserRepresentation = {\n  displayName?: string;\n  id?: string;\n  assigned?: boolean;\n  firstName?: string;\n  lastName?: string;\n  username?: string;\n};\nexport type V1AlphaGetSeatsResponse = {\n  users?: V1AlphaGetSeatsUserRepresentation[];\n};\n/**\n * Checks the permission and returns allowed (true) or not allowed (false)\n */\nexport function checkPermissionCheckPermission(\n  v1AlphaCheckPermissionRequest: V1AlphaCheckPermissionRequest,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaCheckPermissionResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      '/v1alpha/check',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: v1AlphaCheckPermissionRequest,\n      })\n    )\n  );\n}\n/**\n * Health check for the AuthZ service.\n */\nexport function healthCheckServiceHealthCheck(opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaEmpty;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >('/v1alpha/healthcheck', {\n      ...opts,\n    })\n  );\n}\n/**\n * Entitle an Org access through a seat based license for a service.\n */\nexport function licenseServiceEntitleOrg(\n  orgId: string,\n  serviceId: string,\n  body: {\n    maxSeats?: string;\n  },\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: EntitleOrgResponseIsTheResponseWhenEntitlingAnOrg;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(\n        orgId\n      )}/entitlements/${encodeURIComponent(serviceId)}`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body,\n      })\n    )\n  );\n}\nexport function importServiceImportOrg(\n  orgId: string,\n  body: object,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: ImportOrgResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/import`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body,\n      })\n    )\n  );\n}\n/**\n * Summarize a license.\n */\nexport function licenseServiceGetLicense(\n  orgId: string,\n  serviceId: string,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaGetLicenseResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/licenses/${encodeURIComponent(\n        serviceId\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Assign or unassign users to/from the license.\n */\nexport function licenseServiceModifySeats(\n  orgId: string,\n  serviceId: string,\n  body: {\n    assign?: string[];\n    unassign?: string[];\n  },\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaModifySeatsResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/licenses/${encodeURIComponent(\n        serviceId\n      )}`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body,\n      })\n    )\n  );\n}\n/**\n * Gets user details with filters.\n */\nexport function licenseServiceGetSeats(\n  orgId: string,\n  serviceId: string,\n  {\n    includeUsers,\n    filter,\n  }: {\n    includeUsers?: boolean;\n    filter?: 'assigned' | 'assignable';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: V1AlphaGetSeatsResponse;\n        }\n      | {\n          status: 401;\n          data: any;\n        }\n      | {\n          status: 403;\n          data: any;\n        }\n      | {\n          status: 500;\n          data: any;\n        }\n      | {\n          status: number;\n          data: RpcStatus;\n        }\n    >(\n      `/v1alpha/orgs/${encodeURIComponent(orgId)}/licenses/${encodeURIComponent(\n        serviceId\n      )}/seats${QS.query(\n        QS.explode({\n          includeUsers,\n          filter,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n","import {\n  AuthenticatedUser,\n  License,\n  LicenseService,\n  Pagination,\n  TokenFunction,\n  UserResult,\n  header,\n} from '../service';\nimport {\n  licenseServiceGetLicense,\n  licenseServiceGetSeats,\n  licenseServiceModifySeats,\n} from './ciam-authz';\n\nexport class CiamAuthz implements LicenseService {\n  private baseUrl: string;\n\n  constructor(baseUrl?: string) {\n    this.baseUrl = baseUrl || '';\n  }\n\n  async get({ orgId, serviceId, token }: AuthenticatedUser): Promise<License> {\n    const opts = await this.requestHeader(token);\n    const result = await licenseServiceGetLicense(orgId, serviceId, opts);\n    return {\n      available: Number(result.seatsAvailable) || 0,\n      total: Number(result.seatsTotal) || 0,\n    };\n  }\n\n  async seats(\n    { orgId, serviceId, token }: AuthenticatedUser,\n    _pagination: Pagination,\n    assigned: boolean | undefined = true\n  ): Promise<UserResult> {\n    const opts = await this.requestHeader(token);\n    const result = await licenseServiceGetSeats(\n      orgId,\n      serviceId,\n      { filter: assigned ? 'assigned' : 'assignable' },\n      opts\n    );\n    return {\n      users:\n        result.users?.map(\n          ({ id, firstName, lastName, username, assigned }) => ({\n            id: id || '',\n            firstName: firstName || '',\n            lastName: lastName || '',\n            userName: username || '',\n            assigned: !!assigned,\n          })\n        ) || [],\n      count: result.users?.length || 0,\n    };\n  }\n\n  private async requestHeader(token: TokenFunction) {\n    return await header(token, this.baseUrl);\n  }\n\n  async assign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    const body = { assign: userIds };\n    await this.modify(user, body);\n    return;\n  }\n\n  async unAssign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    const body = { unassign: userIds };\n    await this.modify(user, body);\n    return;\n  }\n\n  private async modify(\n    { orgId, serviceId, token }: AuthenticatedUser,\n    body: any\n  ): Promise<any> {\n    const opts = await this.requestHeader(token);\n    return licenseServiceModifySeats(orgId, serviceId, body, opts);\n  }\n}\n","/**\n * Entitlements\n * 1.0.0\n * DO NOT MODIFY - This file has been generated using oazapfts.\n * See https://www.npmjs.com/package/oazapfts\n */\nimport * as Oazapfts from 'oazapfts/lib/runtime';\nimport * as QS from 'oazapfts/lib/runtime/query';\nexport const defaults: Oazapfts.RequestOpts = {\n  baseUrl: '/api/entitlements/v1/',\n};\nconst oazapfts = Oazapfts.runtime(defaults);\nexport const servers = {\n  localEntitlementsApi: '/api/entitlements/v1/',\n  prodEntitlementsApi: 'https://cloud.redhat.com/api/entitlements/v1/',\n};\nexport type ServiceDetails = {\n  is_entitled?: boolean;\n  is_trial?: boolean;\n};\nexport type Service = {\n  [key: string]: ServiceDetails;\n};\nexport type PaginationMeta = {\n  count?: number;\n};\nexport type PaginationLinks = {\n  first?: string;\n  previous?: string;\n  next?: string;\n  last?: string;\n};\nexport type ListPagination = {\n  meta?: PaginationMeta;\n  links?: PaginationLinks;\n};\nexport type Seat = {\n  subscription_id?: string;\n  account_username?: string;\n  status?: string;\n  first_name?: string;\n  last_name?: string;\n};\nexport type ListSeatsResponsePagination = ListPagination & {\n  data: Seat[];\n  allowed?: number;\n  consumed?: number;\n};\nexport type Error = {\n  error?: string;\n};\nexport type SeatRequest = {\n  account_username: string;\n};\nexport type ComplianceScreeningResponse = {\n  result?: 'OK' | 'ERROR_T5' | 'ERROR_OFAC' | 'ERROR_EXPORT_CONTROL';\n  description?: string;\n};\nexport type ComplianceScreeningErrorResponse = {\n  errors?: {\n    error?: string;\n    identityType?: string;\n    identity?: string;\n  }[];\n};\nexport type DependencyErrorDetails = {\n  dependency_failure?: boolean;\n  service?: string;\n  status?: number;\n  endpoint?: string;\n  message?: string;\n};\nexport type DependencyErrorResponse = {\n  error?: {\n    [key: string]: DependencyErrorDetails;\n  };\n};\n/**\n * get a list of services a user is entitled to\n */\nexport function getServices(\n  {\n    includeBundles,\n    excludeBundles,\n  }: {\n    includeBundles?: string[];\n    excludeBundles?: string[];\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: Service;\n        }\n      | {\n          status: 404;\n        }\n    >(\n      `/services${QS.query(\n        QS.form({\n          include_bundles: includeBundles,\n          exclude_bundles: excludeBundles,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * returns list of users occupying seats\n */\nexport function getSeats(\n  {\n    status,\n    excludeStatus,\n    limit,\n    offset,\n  }: {\n    status?: ('Active' | 'Deprovisioned')[];\n    excludeStatus?: ('Active' | 'Deprovisioned')[];\n    limit?: number;\n    offset?: number;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: ListSeatsResponsePagination;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/seats${QS.query(\n        QS.explode({\n          status,\n          excludeStatus,\n          limit,\n          offset,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * assign a user to a seat\n */\nexport function postSeats(\n  seatRequest: SeatRequest,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: Seat;\n        }\n      | {\n          status: 400;\n          data: Error;\n        }\n    >(\n      '/seats',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: seatRequest,\n      })\n    )\n  );\n}\n/**\n * remove a user from a seat\n */\nexport function deleteSeatsById(id: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 400;\n          data: Error;\n        }\n      | {\n          status: 403;\n          data: Error;\n        }\n    >(`/seats/${encodeURIComponent(id)}`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * verify exports compliance for a given user\n */\nexport function getCompliance(opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: ComplianceScreeningResponse;\n        }\n      | {\n          status: 400;\n          data: ComplianceScreeningErrorResponse;\n        }\n      | {\n          status: 500;\n          data: DependencyErrorResponse;\n        }\n    >('/compliance', {\n      ...opts,\n    })\n  );\n}\n","/**\n * Role Based Access Control\n * 1.0.0\n * DO NOT MODIFY - This file has been generated using oazapfts.\n * See https://www.npmjs.com/package/oazapfts\n */\nimport * as Oazapfts from 'oazapfts/lib/runtime';\nimport * as QS from 'oazapfts/lib/runtime/query';\nexport const defaults: Oazapfts.RequestOpts = {\n  baseUrl: '/api/rbac/v1',\n};\nconst oazapfts = Oazapfts.runtime(defaults);\nexport const servers = {\n  server1: '/api/rbac/v1',\n};\nexport type PaginationMeta = {\n  count?: number;\n};\nexport type PaginationLinks = {\n  first?: string;\n  previous?: string;\n  next?: string;\n  last?: string;\n};\nexport type ListPagination = {\n  meta?: PaginationMeta;\n  links?: PaginationLinks;\n};\nexport type CrossAccountRequest = {\n  request_id?: string;\n  target_account?: string;\n  target_org?: string;\n  status?: string;\n  created?: string;\n  start_date?: any;\n  end_date?: any;\n};\nexport type CrossAccountRequestByAccount = CrossAccountRequest & {\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n};\nexport type CrossAccountRequestByUserId = CrossAccountRequest & {\n  user_id?: string;\n};\nexport type CrossAccountRequestPagination = ListPagination & {\n  data: (CrossAccountRequestByAccount | CrossAccountRequestByUserId)[];\n};\nexport type Error403 = {\n  errors: {\n    detail?: string;\n    source?: string;\n    status?: string;\n  }[];\n};\nexport type Error = {\n  errors: {\n    detail?: string;\n    status?: string;\n  }[];\n};\nexport type CrossAccountRequestIn = {\n  target_account: string;\n  target_org?: string;\n  start_date: string;\n  end_date: string;\n  roles: string[];\n};\nexport type Permission = {\n  application?: string;\n  resource_type?: string;\n  verb?: string;\n  permission?: string;\n  description?: string;\n};\nexport type CrossAccountRequestWithRoles = {\n  request_id?: string;\n  target_account?: string;\n  target_org?: string;\n  start_date?: string;\n  end_date?: string;\n  status?: string;\n  created?: string;\n  roles?: {\n    display_name?: string;\n    description?: string;\n    permissions?: Permission[];\n  }[];\n};\nexport type CrossAccountRequestOut = CrossAccountRequestWithRoles & {\n  user_id?: string;\n};\nexport type CrossAccountRequestDetailByAccount =\n  CrossAccountRequestWithRoles & {\n    first_name?: any;\n    last_name?: any;\n    email?: any;\n  };\nexport type CrossAccountRequestDetailByUseId = CrossAccountRequestWithRoles & {\n  user_id?: any;\n};\nexport type CrossAccountRequestDetail =\n  | CrossAccountRequestDetailByAccount\n  | CrossAccountRequestDetailByUseId;\nexport type CrossAccountRequestUpdateIn = {\n  start_date: string;\n  end_date: string;\n  roles: string[];\n};\nexport type CrossAccountRequestPatch = {\n  start_date?: string;\n  end_date?: string;\n  roles?: string[];\n  status?: 'pending' | 'approved' | 'expired' | 'cancelled' | 'denied';\n};\nexport type Status = {\n  api_version: number;\n  commit?: string;\n};\nexport type Principal = {\n  username: string;\n  email: string;\n  first_name?: string;\n  last_name?: string;\n  is_active?: boolean;\n  is_org_admin?: boolean;\n};\nexport type PrincipalMinimal = {\n  username: string;\n};\nexport type PrincipalPagination = ListPagination & {\n  data: (Principal | PrincipalMinimal)[];\n};\nexport type Group = {\n  name: string;\n  description?: string;\n};\nexport type Uuid = {\n  uuid: string;\n};\nexport type Timestamped = {\n  created: string;\n  modified: string;\n};\nexport type GroupOut = Group &\n  Uuid &\n  Timestamped & {\n    principalCount?: number;\n    roleCount?: number;\n    system?: boolean;\n    platform_default?: boolean;\n    admin_default?: boolean;\n  };\nexport type GroupPagination = ListPagination & {\n  data: GroupOut[];\n};\nexport type Role = {\n  name: string;\n  display_name?: string;\n  description?: string;\n};\nexport type RoleOut = Role &\n  Uuid &\n  Timestamped & {\n    policyCount?: number;\n    accessCount?: number;\n    applications?: string[];\n    system?: boolean;\n    platform_default?: boolean;\n    admin_default?: boolean;\n    external_role_id?: string;\n    external_tenant?: string;\n  };\nexport type GroupWithPrincipalsAndRoles = Group &\n  Uuid &\n  Timestamped & {\n    principals: Principal[];\n    roles: RoleOut[];\n  };\nexport type PrincipalIn = {\n  username: string;\n};\nexport type GroupPrincipalIn = {\n  principals: PrincipalIn[];\n};\nexport type ErrorNotFound = {\n  errors: {\n    detail?: string;\n    status?: string;\n    source?: string;\n  }[];\n};\nexport type GroupRolesPagination = ListPagination & {\n  data: RoleOut[];\n};\nexport type GroupRoleIn = {\n  roles: string[];\n};\nexport type ResourceDefinitionFilter = {\n  key: string;\n  operation: 'equal' | 'in';\n  value: string;\n};\nexport type ResourceDefinition = {\n  attributeFilter: ResourceDefinitionFilter;\n};\nexport type Access = {\n  permission: string;\n  resourceDefinitions: ResourceDefinition[];\n};\nexport type RoleIn = Role & {\n  access: Access[];\n};\nexport type RoleWithAccess = RoleOut & {\n  access: Access[];\n};\nexport type AdditionalGroup = {\n  name?: string;\n  description?: string;\n  uuid?: string;\n};\nexport type RoleOutDynamic = Role &\n  Uuid &\n  Timestamped & {\n    policyCount: number;\n    accessCount: number;\n    applications: string[];\n    system: boolean;\n    platform_default: boolean;\n    admin_default: boolean;\n    groups_in_count?: number;\n    groups_in?: AdditionalGroup[];\n    external_role_id?: string;\n    external_tenant?: string;\n    access?: Access[];\n  };\nexport type RolePaginationDynamic = ListPagination & {\n  data: RoleOutDynamic[];\n};\nexport type RolePatch = {\n  name?: string;\n  display_name?: string;\n  description?: string;\n};\nexport type AccessPagination = ListPagination & {\n  data: Access[];\n};\nexport type Policy = {\n  name: string;\n  description?: string;\n};\nexport type PolicyIn = Policy & {\n  group: string;\n  roles: string[];\n};\nexport type PolicyExtended = Policy &\n  Uuid &\n  Timestamped & {\n    group: GroupOut;\n    roles: RoleOut[];\n  };\nexport type PolicyPagination = ListPagination & {\n  data: PolicyExtended[];\n};\nexport type PermissionPagination = ListPagination & {\n  data: Permission[];\n};\nexport type PermissionOptionsPagination = ListPagination & {\n  data: string[];\n};\n/**\n * List the cross account requests for a user or account\n */\nexport function listCrossAccountRequests(\n  {\n    limit,\n    offset,\n    queryBy,\n    account,\n    orgId,\n    approvedOnly,\n    status,\n    orderBy,\n  }: {\n    limit?: number;\n    offset?: number;\n    queryBy?: 'user_id' | 'target_org';\n    account?: string;\n    orgId?: string;\n    approvedOnly?: 'true';\n    status?: 'pending' | 'approved' | 'denied' | 'cancelled' | 'expired';\n    orderBy?:\n      | 'request_id'\n      | 'start_date'\n      | 'end_date'\n      | 'created'\n      | 'modified'\n      | 'status';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          query_by: queryBy,\n          account,\n          org_id: orgId,\n          approved_only: approvedOnly,\n          status,\n          order_by: orderBy,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Create a cross account request\n */\nexport function createCrossAccountRequests(\n  crossAccountRequestIn: CrossAccountRequestIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: CrossAccountRequestOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/cross-account-requests/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: crossAccountRequestIn,\n      })\n    )\n  );\n}\n/**\n * Get a cross account request\n */\nexport function getCrossAccountRequest(\n  uuid: string,\n  {\n    queryBy,\n    account,\n    approvedOnly,\n  }: {\n    queryBy?: 'user_id' | 'target_org';\n    account?: string;\n    approvedOnly?: 'true';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestDetail;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${encodeURIComponent(uuid)}/${QS.query(\n        QS.explode({\n          query_by: queryBy,\n          account,\n          approved_only: approvedOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Update a cross account request\n */\nexport function putCrossAccountRequest(\n  uuid: string,\n  crossAccountRequestUpdateIn: CrossAccountRequestUpdateIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestDetail;\n        }\n      | {\n          status: 201;\n          data: CrossAccountRequestOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: crossAccountRequestUpdateIn,\n      })\n    )\n  );\n}\n/**\n * Patch a cross account request\n */\nexport function patchCrossAccountRequest(\n  uuid: string,\n  crossAccountRequestPatch: CrossAccountRequestPatch,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: CrossAccountRequestDetail;\n        }\n      | {\n          status: 201;\n          data: CrossAccountRequestOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/cross-account-requests/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PATCH',\n        body: crossAccountRequestPatch,\n      })\n    )\n  );\n}\n/**\n * Obtain server status\n */\nexport function getStatus(opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: Status;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >('/status/', {\n      ...opts,\n    })\n  );\n}\n/**\n * List the principals for a tenant\n */\nexport function listPrincipals(\n  {\n    limit,\n    offset,\n    matchCriteria,\n    usernames,\n    sortOrder,\n    email,\n    status,\n    adminOnly,\n    orderBy,\n    usernameOnly,\n  }: {\n    limit?: number;\n    offset?: number;\n    matchCriteria?: 'partial' | 'exact';\n    usernames?: string;\n    sortOrder?: 'asc' | 'desc';\n    email?: string;\n    status?: 'enabled' | 'disabled' | 'all';\n    adminOnly?: 'true' | 'false';\n    orderBy?: 'username';\n    usernameOnly?: true | false;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PrincipalPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/principals/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          match_criteria: matchCriteria,\n          usernames,\n          sort_order: sortOrder,\n          email,\n          status,\n          admin_only: adminOnly,\n          order_by: orderBy,\n          username_only: usernameOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Create a group in a tenant\n */\nexport function createGroup(group: Group, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: GroupOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/groups/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: group,\n      })\n    )\n  );\n}\n/**\n * List the groups for a tenant\n */\nexport function listGroups(\n  {\n    limit,\n    offset,\n    name,\n    nameMatch,\n    scope,\n    username,\n    excludeUsername,\n    uuid,\n    roleNames,\n    roleDiscriminator,\n    orderBy,\n    platformDefault,\n    adminDefault,\n    system,\n  }: {\n    limit?: number;\n    offset?: number;\n    name?: string;\n    nameMatch?: 'partial' | 'exact';\n    scope?: 'account' | 'principal';\n    username?: string;\n    excludeUsername?: string;\n    uuid?: string[];\n    roleNames?: string[];\n    roleDiscriminator?: 'all' | 'any';\n    orderBy?: 'name' | 'modified' | 'principalCount' | 'policyCount';\n    platformDefault?: boolean;\n    adminDefault?: boolean;\n    system?: boolean;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          name,\n          name_match: nameMatch,\n          scope,\n          username,\n          exclude_username: excludeUsername,\n          role_discriminator: roleDiscriminator,\n          order_by: orderBy,\n          platform_default: platformDefault,\n          admin_default: adminDefault,\n          system,\n        }),\n        QS.form({\n          uuid,\n          role_names: roleNames,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Get a group in the tenant\n */\nexport function getGroup(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupWithPrincipalsAndRoles;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/groups/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n    })\n  );\n}\n/**\n * Update a group in the tenant\n */\nexport function updateGroup(\n  uuid: string,\n  group: Group,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupOut;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: group,\n      })\n    )\n  );\n}\n/**\n * Delete a group in the tenant\n */\nexport function deleteGroup(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/groups/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * Add a principal to a group in the tenant\n */\nexport function addPrincipalToGroup(\n  uuid: string,\n  groupPrincipalIn: GroupPrincipalIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupWithPrincipalsAndRoles;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: ErrorNotFound;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/principals/`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: groupPrincipalIn,\n      })\n    )\n  );\n}\n/**\n * Get a list of principals from a group in the tenant\n */\nexport function getPrincipalsFromGroup(\n  uuid: string,\n  {\n    principalUsername,\n    limit,\n    offset,\n    orderBy,\n    usernameOnly,\n  }: {\n    principalUsername?: string;\n    limit?: number;\n    offset?: number;\n    orderBy?: 'username';\n    usernameOnly?: true | false;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PrincipalPagination;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/principals/${QS.query(\n        QS.explode({\n          principal_username: principalUsername,\n          limit,\n          offset,\n          order_by: orderBy,\n          username_only: usernameOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Remove a principal from a group in the tenant\n */\nexport function deletePrincipalFromGroup(\n  uuid: string,\n  usernames: string,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: ErrorNotFound;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/principals/${QS.query(\n        QS.explode({\n          usernames,\n        })\n      )}`,\n      {\n        ...opts,\n        method: 'DELETE',\n      }\n    )\n  );\n}\n/**\n * List the roles for a group in the tenant\n */\nexport function listRolesForGroup(\n  uuid: string,\n  {\n    exclude,\n    roleName,\n    roleDisplayName,\n    roleDescription,\n    roleSystem,\n    roleExternalTenant,\n    limit,\n    offset,\n    orderBy,\n  }: {\n    exclude?: boolean;\n    roleName?: string;\n    roleDisplayName?: string;\n    roleDescription?: string;\n    roleSystem?: boolean;\n    roleExternalTenant?: string;\n    limit?: number;\n    offset?: number;\n    orderBy?: 'name' | 'display_name' | 'modified' | 'policyCount';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: GroupRolesPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/roles/${QS.query(\n        QS.explode({\n          exclude,\n          role_name: roleName,\n          role_display_name: roleDisplayName,\n          role_description: roleDescription,\n          role_system: roleSystem,\n          role_external_tenant: roleExternalTenant,\n          limit,\n          offset,\n          order_by: orderBy,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Add a role to a group in the tenant\n */\nexport function addRoleToGroup(\n  uuid: string,\n  groupRoleIn: GroupRoleIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: {\n            data: RoleOut[];\n          };\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/roles/`,\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: groupRoleIn,\n      })\n    )\n  );\n}\n/**\n * Remove a role from a group in the tenant\n */\nexport function deleteRoleFromGroup(\n  uuid: string,\n  roles: string,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 400;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/groups/${encodeURIComponent(uuid)}/roles/${QS.query(\n        QS.explode({\n          roles,\n        })\n      )}`,\n      {\n        ...opts,\n        method: 'DELETE',\n      }\n    )\n  );\n}\n/**\n * Create a role for a tenant\n */\nexport function createRole(roleIn: RoleIn, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: RoleWithAccess;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/roles/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: roleIn,\n      })\n    )\n  );\n}\n/**\n * List the roles for a tenant\n */\nexport function listRoles(\n  {\n    limit,\n    offset,\n    name,\n    system,\n    displayName,\n    nameMatch,\n    scope,\n    orderBy,\n    addFields,\n    username,\n    application,\n    permission,\n    externalTenant,\n  }: {\n    limit?: number;\n    offset?: number;\n    name?: string;\n    system?: boolean;\n    displayName?: string;\n    nameMatch?: 'partial' | 'exact';\n    scope?: 'account' | 'principal';\n    orderBy?: 'name' | 'display_name' | 'modified' | 'policyCount';\n    addFields?: ('groups_in' | 'groups_in_count' | 'access')[];\n    username?: string;\n    application?: string;\n    permission?: string;\n    externalTenant?: string;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: RolePaginationDynamic;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          name,\n          system,\n          display_name: displayName,\n          name_match: nameMatch,\n          scope,\n          order_by: orderBy,\n          username,\n          application,\n          permission,\n          external_tenant: externalTenant,\n        }),\n        QS.form({\n          add_fields: addFields,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Get a role in the tenant\n */\nexport function getRole(\n  uuid: string,\n  {\n    scope,\n  }: {\n    scope?: 'account' | 'principal';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: RoleWithAccess;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/${QS.query(\n        QS.explode({\n          scope,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Delete a role in the tenant\n */\nexport function deleteRole(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/roles/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * Update a role in the tenant\n */\nexport function updateRole(\n  uuid: string,\n  roleWithAccess: RoleWithAccess,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: roleWithAccess,\n      })\n    )\n  );\n}\n/**\n * Patch a role in the tenant\n */\nexport function patchRole(\n  uuid: string,\n  rolePatch?: RolePatch,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: RoleWithAccess;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PATCH',\n        body: rolePatch,\n      })\n    )\n  );\n}\n/**\n * Get access for a role in the tenant\n */\nexport function getRoleAccess(\n  uuid: string,\n  {\n    limit,\n    offset,\n  }: {\n    limit?: number;\n    offset?: number;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: AccessPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/roles/${encodeURIComponent(uuid)}/access/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Create a policy in a tenant\n */\nexport function createPolicies(\n  policyIn: PolicyIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 201;\n          data: PolicyExtended;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      '/policies/',\n      oazapfts.json({\n        ...opts,\n        method: 'POST',\n        body: policyIn,\n      })\n    )\n  );\n}\n/**\n * List the policies in the tenant\n */\nexport function listPolicies(\n  {\n    limit,\n    offset,\n    name,\n    scope,\n    groupName,\n    groupUuid,\n    orderBy,\n  }: {\n    limit?: number;\n    offset?: number;\n    name?: string;\n    scope?: 'account' | 'principal';\n    groupName?: string;\n    groupUuid?: string;\n    orderBy?: 'name' | 'modified';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PolicyPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/policies/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          name,\n          scope,\n          group_name: groupName,\n          group_uuid: groupUuid,\n          order_by: orderBy,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * Get a policy in the tenant\n */\nexport function getPolicy(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PolicyExtended;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/policies/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n    })\n  );\n}\n/**\n * Update a policy in the tenant\n */\nexport function updatePolicy(\n  uuid: string,\n  policyIn: PolicyIn,\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PolicyExtended;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/policies/${encodeURIComponent(uuid)}/`,\n      oazapfts.json({\n        ...opts,\n        method: 'PUT',\n        body: policyIn,\n      })\n    )\n  );\n}\n/**\n * Delete a policy in the tenant\n */\nexport function deletePolicy(uuid: string, opts?: Oazapfts.RequestOpts) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 204;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(`/policies/${encodeURIComponent(uuid)}/`, {\n      ...opts,\n      method: 'DELETE',\n    })\n  );\n}\n/**\n * Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n */\nexport function getPrincipalAccess(\n  application: string,\n  {\n    username,\n    orderBy,\n    limit,\n    offset,\n  }: {\n    username?: string;\n    orderBy?: 'application' | 'resource_type' | 'verb';\n    limit?: number;\n    offset?: number;\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: AccessPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 404;\n          data: Error;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/access/${QS.query(\n        QS.explode({\n          application,\n          username,\n          order_by: orderBy,\n          limit,\n          offset,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * List the permissions for a tenant\n */\nexport function listPermissions(\n  {\n    limit,\n    offset,\n    orderBy,\n    application,\n    resourceType,\n    verb,\n    permission,\n    excludeGlobals,\n    excludeRoles,\n    allowedOnly,\n  }: {\n    limit?: number;\n    offset?: number;\n    orderBy?: 'application' | 'resource_type' | 'verb' | 'permission';\n    application?: string;\n    resourceType?: string;\n    verb?: string;\n    permission?: string;\n    excludeGlobals?: 'true' | 'false';\n    excludeRoles?: string;\n    allowedOnly?: 'true' | 'false';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PermissionPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/permissions/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          order_by: orderBy,\n          application,\n          resource_type: resourceType,\n          verb,\n          permission,\n          exclude_globals: excludeGlobals,\n          exclude_roles: excludeRoles,\n          allowed_only: allowedOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n/**\n * List the available options for fields of permissions for a tenant\n */\nexport function listPermissionOptions(\n  field: 'application' | 'resource_type' | 'verb',\n  {\n    limit,\n    offset,\n    application,\n    resourceType,\n    verb,\n    excludeGlobals,\n    allowedOnly,\n  }: {\n    limit?: number;\n    offset?: number;\n    application?: string;\n    resourceType?: string;\n    verb?: string;\n    excludeGlobals?: 'true' | 'false';\n    allowedOnly?: 'true' | 'false';\n  } = {},\n  opts?: Oazapfts.RequestOpts\n) {\n  return oazapfts.ok(\n    oazapfts.fetchJson<\n      | {\n          status: 200;\n          data: PermissionOptionsPagination;\n        }\n      | {\n          status: 401;\n        }\n      | {\n          status: 403;\n          data: Error403;\n        }\n      | {\n          status: 500;\n          data: Error;\n        }\n    >(\n      `/permissions/options/${QS.query(\n        QS.explode({\n          limit,\n          offset,\n          field,\n          application,\n          resource_type: resourceType,\n          verb,\n          exclude_globals: excludeGlobals,\n          allowed_only: allowedOnly,\n        })\n      )}`,\n      {\n        ...opts,\n      }\n    )\n  );\n}\n","import {\n  AuthenticatedUser,\n  License,\n  LicenseService,\n  Pagination,\n  UserResult,\n  header,\n} from '../service';\nimport { deleteSeatsById, getSeats, postSeats } from './entitlements-service';\nimport { listPrincipals } from './rbac';\nimport { Principal } from './rbac';\n\nexport class EntitlementsService implements LicenseService {\n  private baseUrl: string;\n\n  constructor(baseUrl?: string) {\n    this.baseUrl = baseUrl || '';\n  }\n\n  private async requestHeader(user: AuthenticatedUser) {\n    return await header(user.token, this.baseUrl + 'api/entitlements/v1/');\n  }\n\n  async get(user: AuthenticatedUser, pagination: Pagination): Promise<License> {\n    const result = await getSeats(\n      {\n        limit: pagination.perPage,\n        offset: (pagination.page - 1) * pagination.perPage,\n      },\n      await this.requestHeader(user)\n    );\n    const allowed = result.allowed || 0;\n    const consumed = result.consumed || 0;\n    return {\n      available: allowed - consumed,\n      total: allowed,\n    };\n  }\n\n  async seats(\n    user: AuthenticatedUser,\n    pagination: Pagination,\n    assigned: boolean | undefined = true\n  ): Promise<UserResult> {\n    if (assigned) {\n      const result = await getSeats(\n        {\n          limit: pagination.perPage,\n          offset: (pagination.page - 1) * pagination.perPage,\n          status: ['Active'],\n        },\n        await this.requestHeader(user)\n      );\n\n      return {\n        users: result.data.map((user) => ({\n          id: user.subscription_id || '',\n          userName: user.account_username || '',\n          firstName: user.first_name || '',\n          lastName: user.last_name || '',\n          assigned: true,\n        })),\n        count: result.meta?.count || 0,\n      };\n    } else {\n      const header = await this.requestHeader(user);\n      const result = await listPrincipals(\n        { usernameOnly: false },\n        { ...header, baseUrl: this.baseUrl + 'api/rbac/v1/' }\n      );\n\n      return {\n        users: (result.data as Principal[]).map(\n          ({ username, first_name, last_name }) => ({\n            id: username,\n            firstName: first_name || '',\n            lastName: last_name || '',\n            userName: username,\n            assigned: false,\n          })\n        ),\n        count: result.meta?.count || 0,\n      };\n    }\n  }\n\n  async assign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    await Promise.all(\n      userIds.map(async (id) =>\n        postSeats({ account_username: id }, await this.requestHeader(user))\n      )\n    );\n    return Promise.resolve();\n  }\n\n  async unAssign(user: AuthenticatedUser, userIds: string[]): Promise<void> {\n    await Promise.all(\n      userIds.map(async (id) =>\n        deleteSeatsById(id, await this.requestHeader(user))\n      )\n    );\n    return Promise.resolve();\n  }\n}\n","import { MockService } from './api/mock-service';\nimport { CiamAuthz } from './api/ciam-service';\nimport { EntitlementsService } from './entitlements-api/entitlements';\nimport * as Oazapfts from 'oazapfts/lib/runtime';\n\nexport type License = {\n  available: number;\n  total: number;\n};\n\nexport type User = {\n  id: string;\n  firstName: string;\n  lastName: string;\n  userName: string;\n  assigned: boolean;\n};\n\nexport type TokenFunction = () => Promise<string>;\n\nexport type AuthenticatedUser = {\n  orgId: string;\n  serviceId: string;\n  isOrgAdmin: boolean;\n  token: TokenFunction;\n};\n\nexport type Pagination = {\n  page: number;\n  perPage: number;\n};\n\nexport type UserResult = {\n  users: User[];\n  count: number;\n};\n\nexport const header = async (\n  token: TokenFunction,\n  baseUrl: string\n): Promise<Oazapfts.RequestOpts> => {\n  const tokenString = await token();\n  return {\n    headers: {\n      Authorization: `Bearer ${tokenString}`,\n    },\n    baseUrl,\n  };\n};\n\nexport interface LicenseService {\n  get(user: AuthenticatedUser, pagination: Pagination): Promise<License>;\n\n  seats(\n    user: AuthenticatedUser,\n    pagination: Pagination,\n    assigned?: boolean\n  ): Promise<UserResult>;\n\n  assign(user: AuthenticatedUser, userIds: string[]): Promise<void>;\n\n  unAssign(user: AuthenticatedUser, userIds: string[]): Promise<void>;\n}\n\nexport function getService(\n  serviceKey: string,\n  baseUrl?: string\n): LicenseService {\n  switch (serviceKey) {\n    case 'CIAM_Authz':\n      return new CiamAuthz(baseUrl);\n    case 'entitlements':\n      return new EntitlementsService(baseUrl);\n    case 'mock':\n      return new MockService();\n    default:\n      throw new Error('no implementation found for ' + serviceKey);\n  }\n}\n","import { Context, PropsWithChildren, createContext, useContext } from 'react';\nimport { LicenseService, getService } from '../client/service';\n\ntype ServiceContextProps = {\n  serviceName: string;\n  baseUrl?: string;\n};\n\nexport const ServiceContext = createContext<LicenseService | undefined>(\n  undefined\n);\n\nfunction useRequiredContext<T>(context: Context<T>): NonNullable<T> {\n  const resolved = useContext(context);\n\n  if (resolved !== undefined && resolved !== null) {\n    return resolved;\n  }\n\n  throw new Error(\n    `No provider found for context, make sure it is included in your component hierarchy.`\n  );\n}\n\nexport const useService = () => useRequiredContext(ServiceContext);\n\nexport const ServiceContextProvider = ({\n  serviceName,\n  baseUrl,\n  children,\n}: PropsWithChildren<ServiceContextProps>) => {\n  return (\n    <ServiceContext.Provider value={getService(serviceName, baseUrl)}>\n      {children}\n    </ServiceContext.Provider>\n  );\n};\n","import { NavigateOptions, To } from 'react-router-dom';\nimport { Link, LinkProps, useNavigate } from 'react-router-dom';\n\nexport const linkBasename = '/ansible/seats-administration';\nexport const mergeToBasename = (\n  to: To,\n  basename: string = linkBasename\n): To => {\n  if (typeof to === 'string') {\n    // replace possible \"//\" after basename\n    return `${basename}${to}`.replace(`^${basename}//`, '/');\n  }\n\n  return {\n    ...to,\n    pathname: `${basename}${to.pathname}`.replace(`^${basename}//`, '/'),\n  };\n};\n\nexport const useAppNavigate = () => {\n  const navigate = useNavigate();\n  const appNavigate = (to: string, props?: NavigateOptions) => {\n    return navigate(mergeToBasename(to), props);\n  };\n  return appNavigate;\n};\n\nexport const AppLink = (props: LinkProps) => (\n  <Link {...props} to={mergeToBasename(props.to, linkBasename)} />\n);\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Icon,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport type { VoidFunctionComponent } from 'react';\n\nconst DangerIcon: VoidFunctionComponent = () => (\n  <Icon status={'danger'} size={'xl'}>\n    <ExclamationCircleIcon />\n  </Icon>\n);\n\nexport const EmptyStateNoSubscription: VoidFunctionComponent = () => {\n  return (\n    <EmptyState isFullHeight={true}>\n      <EmptyStateIcon component={DangerIcon} variant={'container'} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        Your organization no longer has an Ansible Lightspeed with IBM watsonx\n        Code Assistant subscription.\n      </Title>\n      <EmptyStateBody>\n        Please contact Red Hat if there is an issue with your subscription or if\n        you wish to continue to use of your Ansible Lightspeed with IBM watsonx\n        Code Assistant\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { VoidFunctionComponent } from 'react';\n\nexport type RemoveUsersModalProps = {\n  usersToRemove: number;\n  onOk: () => void;\n};\n\nconst RemoveUsersModal: VoidFunctionComponent<RemoveUsersModalProps> = ({\n  usersToRemove,\n  onOk,\n}) => {\n  return (\n    <Modal\n      id=\"remove-users-modal\"\n      variant={ModalVariant.small}\n      isOpen\n      aria-label=\"Remove users from Ansible Lightspeed with IBM watsonx Code Assistant\"\n      header={\n        <Title headingLevel=\"h1\" style={{ display: 'flex' }}>\n          <ExclamationTriangleIcon\n            size=\"lg\"\n            style={{ color: 'var(--pf-global--warning-color--100)' }}\n          />\n          <span className=\"pf-u-ml-md\">\n            Remove users from Ansible Lightspeed with IBM watsonx Code\n            Assistant.\n          </span>\n        </Title>\n      }\n      showClose={false}\n      aria-describedby=\"modal-message\"\n      actions={[\n        <Button onClick={onOk} key={1} variant={ButtonVariant.primary}>\n          Ok\n        </Button>,\n      ]}\n    >\n      Your organization has reduced the number of users in Opt in to Ansible\n      Lightspeed with IBM watsonx Code Assistant to {usersToRemove}. Please\n      remove {usersToRemove} users to continue using the Opt in to Ansible\n      Lightspeed with IBM watsonx Code Assistant subscription.\n    </Modal>\n  );\n};\n\nexport { RemoveUsersModal };\n","import {\n  Label,\n  Level,\n  LevelItem,\n  PageSection,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport { VoidFunctionComponent } from 'react';\n\nexport type SeatsHeaderProps = {\n  availableSeats: number;\n  totalSeats: number;\n};\nexport const SeatsHeader: VoidFunctionComponent<SeatsHeaderProps> = ({\n  availableSeats,\n  totalSeats,\n}) => {\n  return (\n    <PageSection variant={'light'} hasShadowBottom={true}>\n      <TextContent>\n        <Title headingLevel={'h1'}>\n          Ansible Lightspeed with IBM watsonx Code Assistant\n        </Title>\n        <Level>\n          <LevelItem>\n            <Text>\n              This group contains all users assigned seats within your\n              organization.\n            </Text>\n          </LevelItem>\n          {totalSeats > 0 && (\n            <LevelItem>\n              <Text>\n                Seats available:&nbsp;\n                <Label isCompact={true}>\n                  {availableSeats} of {totalSeats}\n                </Label>\n              </Text>\n            </LevelItem>\n          )}\n        </Level>\n      </TextContent>\n    </PageSection>\n  );\n};\n","import {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport type { VoidFunctionComponent } from 'react';\n\nexport type EmptyStateNoAssignedSeatProps = {\n  totalSeats: number;\n  onAddUsers: () => void;\n};\n\nexport const EmptyStateNoAssignedSeat: VoidFunctionComponent<\n  EmptyStateNoAssignedSeatProps\n> = ({ totalSeats, onAddUsers }) => {\n  return (\n    <EmptyState isFullHeight={true}>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        Your organization has {totalSeats} Ansible Lightspeed with IBM watsonx\n        Code Assistant\n        <br />\n        seats available, but currently there are no users assigned to these\n        seats.\n      </Title>\n      <EmptyStateBody>\n        Please add users by using the button below.\n      </EmptyStateBody>\n      <Button\n        ouiaId=\"button-create\"\n        variant=\"primary\"\n        onClick={() => onAddUsers()}\n      >\n        Add users\n      </Button>\n    </EmptyState>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport type { VoidFunctionComponent } from 'react';\n\nexport type EmptyStateNoResultsProps = {\n  onClearAllFilters: () => void;\n};\n\nexport const EmptyStateNoResults: VoidFunctionComponent<\n  EmptyStateNoResultsProps\n> = ({ onClearAllFilters }) => {\n  return (\n    <EmptyState variant={EmptyStateVariant.xs}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel=\"h2\" size=\"lg\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        Adjust your filters and try again, or&nbsp;\n        <a onClick={onClearAllFilters}>clear all filters</a>.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import {\n  Bullseye,\n  Button,\n  Menu,\n  MenuContent,\n  MenuItem,\n  MenuList,\n  MenuToggle,\n  MenuToggleCheckbox,\n  Pagination,\n  Popper,\n  SearchInput,\n  Skeleton,\n  Spinner,\n  Toolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup,\n} from '@patternfly/react-core';\nimport FilterIcon from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport {\n  ActionsColumn,\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport filter from 'lodash.filter';\nimport orderBy from 'lodash.orderby';\nimport { VoidFunctionComponent, useMemo, useState } from 'react';\nimport { User } from '../client/service';\nimport { EmptyStateNoAssignedSeat } from './EmptyStateNoAssignedSeat';\nimport { EmptyStateNoResults } from './EmptyStateNoResults';\n\nexport const Columns = ['userName', 'firstName', 'lastName'] as const;\ntype ColumnTypes = (typeof Columns)[number];\n\nexport const labels: { [key in ColumnTypes]: string } = {\n  userName: 'Username',\n  firstName: 'First name',\n  lastName: 'Last name',\n};\n\nexport type UsersWithSeatTableProps = {\n  users: Array<User> | undefined | null;\n  totalSeats: number | undefined;\n  canAddUser?: boolean;\n  canRemove?: boolean;\n  onAddUser?: () => void;\n  isUserChecked: (user: User) => boolean;\n  onCheckUser: (user: User, isChecked: boolean) => void;\n  setSelectedUser?: (users: User[]) => void;\n  onRemoveSeat?: (row?: User) => void;\n  isPicker?: boolean;\n  itemCount?: number;\n  page: number;\n  perPage: number;\n  onPageChange: (page: number, perPage: number) => void;\n};\n\nconst TableSkeleton: VoidFunctionComponent<{\n  columns: number;\n  rows: number;\n}> = ({ columns, rows }) => {\n  const skeletonCells = new Array(columns).fill(0).map((_, index) => {\n    return (\n      <Td key={`cell_${index}`}>\n        <Skeleton\n          screenreaderText={index === 0 ? 'Loading content' : undefined}\n        />\n      </Td>\n    );\n  });\n  const skeletonRows = new Array(rows)\n    .fill(0)\n    .map((_, index) => <Tr key={`row_${index}`}>{skeletonCells}</Tr>);\n  return <>{skeletonRows}</>;\n};\n\ntype SelectOption = 'all' | 'none' | 'page';\n\ntype BulkSelectToolbarProps = {\n  perPage: number;\n  itemCount: number;\n  select: (option: SelectOption) => void;\n};\n\nconst BulkSelectToolbar = ({\n  perPage,\n  itemCount,\n  select,\n}: BulkSelectToolbarProps) => {\n  const [isBulkSelectOpen, setIsBulkSelectOpen] = useState(false);\n  const [menuToggleCheckmark, setMenuToggleCheckmark] = useState(false);\n\n  return (\n    <Popper\n      trigger={\n        <MenuToggle\n          onClick={() => setIsBulkSelectOpen(!isBulkSelectOpen)}\n          isExpanded={isBulkSelectOpen}\n          splitButtonOptions={{\n            items: [\n              <MenuToggleCheckbox\n                id=\"select-all\"\n                key=\"select-all\"\n                aria-label=\"Select all\"\n                isChecked={menuToggleCheckmark}\n                onChange={(checked) => {\n                  setMenuToggleCheckmark(checked);\n                  select(checked ? 'all' : 'none');\n                }}\n              />,\n            ],\n          }}\n          aria-label=\"Full table selection checkbox\"\n        />\n      }\n      popper={\n        <Menu\n          id=\"select\"\n          onSelect={(_ev, itemId) => {\n            setMenuToggleCheckmark(itemId === 1 || itemId === 2);\n            select(itemId === 1 ? 'page' : itemId === 2 ? 'all' : 'none');\n            setIsBulkSelectOpen(!isBulkSelectOpen);\n          }}\n        >\n          <MenuContent>\n            <MenuList>\n              <MenuItem itemId={0}>Select none (0 items)</MenuItem>\n              <MenuItem itemId={1}>\n                Select page ({perPage > itemCount ? itemCount : perPage} items)\n              </MenuItem>\n              <MenuItem itemId={2}>Select all ({itemCount} items)</MenuItem>\n            </MenuList>\n          </MenuContent>\n        </Menu>\n      }\n      isVisible={isBulkSelectOpen}\n      popperMatchesTriggerWidth={false}\n    />\n  );\n};\n\nexport const UsersWithSeatTable = ({\n  users,\n  itemCount,\n  page,\n  perPage,\n  totalSeats,\n  canAddUser = false,\n  canRemove = true,\n  isUserChecked,\n  onCheckUser,\n  setSelectedUser,\n  onPageChange,\n  onRemoveSeat,\n  onAddUser,\n  isPicker = false,\n}: UsersWithSeatTableProps) => {\n  const [activeSortIndex, setActiveSortIndex] = useState<number | undefined>();\n  const [activeSortDirection, setActiveSortDirection] = useState<\n    'asc' | 'desc' | undefined\n  >();\n\n  const [filterColumn, setFilterColumn] = useState<ColumnTypes>(Columns[0]);\n  const [search, setSearch] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [filterOpen, setFilterOpen] = useState(false);\n\n  const startIndex = (page - 1) * (perPage || 20);\n\n  const data = useMemo<User[]>(() => {\n    let page = users?.slice(startIndex, startIndex + (perPage || 20)) || [];\n    if (activeSortIndex !== undefined) {\n      page = orderBy(page, Columns[activeSortIndex], activeSortDirection);\n    }\n\n    if (filterValue !== '') {\n      page = filter(page, (user: User) =>\n        user[filterColumn].includes(filterValue)\n      );\n    }\n    return page;\n  }, [\n    users,\n    startIndex,\n    perPage,\n    activeSortIndex,\n    activeSortDirection,\n    filterValue,\n    filterColumn,\n  ]);\n\n  if (users === null) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n  if (users?.length === 0 && filterValue === '' && !isPicker) {\n    return (\n      <EmptyStateNoAssignedSeat\n        totalSeats={totalSeats || 0}\n        onAddUsers={() => onAddUser?.()}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Toolbar clearAllFilters={() => setFilterValue('')}>\n        <ToolbarContent>\n          {!isPicker && (\n            <ToolbarItem>\n              <BulkSelectToolbar\n                perPage={perPage || 20}\n                itemCount={itemCount || 0}\n                select={(option) => {\n                  switch (option) {\n                    case 'all':\n                      setSelectedUser?.(users || []);\n                      break;\n                    case 'page':\n                      setSelectedUser?.(data || []);\n                      break;\n                    default:\n                      setSelectedUser?.([]);\n                  }\n                }}\n              />\n            </ToolbarItem>\n          )}\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"xl\">\n            <ToolbarGroup variant=\"filter-group\">\n              <ToolbarItem>\n                <Popper\n                  isVisible={filterOpen}\n                  trigger={\n                    <MenuToggle\n                      onClick={() => setFilterOpen(!filterOpen)}\n                      isExpanded={filterOpen}\n                      icon={<FilterIcon />}\n                    >\n                      {labels[filterColumn]}\n                    </MenuToggle>\n                  }\n                  popper={\n                    <Menu\n                      onSelect={(_ev, itemId) => {\n                        setFilterColumn(itemId?.toString() as ColumnTypes);\n                        setFilterOpen(false);\n                      }}\n                    >\n                      <MenuContent>\n                        <MenuList>\n                          {Columns.map((column) => (\n                            <MenuItem key={column} itemId={column}>\n                              {labels[column]}\n                            </MenuItem>\n                          ))}\n                        </MenuList>\n                      </MenuContent>\n                    </Menu>\n                  }\n                />\n              </ToolbarItem>\n              <ToolbarFilter\n                chips={filterValue !== '' ? [filterValue] : ([] as string[])}\n                deleteChip={() => setFilterValue('')}\n                deleteChipGroup={() => setFilterValue('')}\n                categoryName={labels[filterColumn]}\n                widths={isPicker ? { default: '500px' } : undefined}\n              >\n                <SearchInput\n                  aria-label=\"Filter table based on column\"\n                  placeholder={`Filter by ${labels[filterColumn]}`}\n                  onChange={(_event, value) => setSearch(value)}\n                  onSearch={(_, value) => setFilterValue(value)}\n                  value={search}\n                  onClear={() => {\n                    setSearch('');\n                  }}\n                />\n              </ToolbarFilter>\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n          {!isPicker && canAddUser && (\n            <ToolbarItem>\n              <Button onClick={onAddUser}>Assign users</Button>\n            </ToolbarItem>\n          )}\n          {!isPicker && canRemove && (\n            <>\n              <ToolbarItem>\n                <Button onClick={() => onRemoveSeat?.()} variant=\"secondary\">\n                  Remove users\n                </Button>\n              </ToolbarItem>\n              <ToolbarItem alignment={{ default: 'alignRight' }}>\n                <Pagination\n                  itemCount={itemCount || 0}\n                  page={page}\n                  perPage={perPage || 20}\n                  onSetPage={(_, page) => onPageChange(page, perPage)}\n                  onPerPageSelect={(_, perPage) => onPageChange(1, perPage)}\n                  isCompact\n                  variant=\"top\"\n                />\n              </ToolbarItem>\n            </>\n          )}\n        </ToolbarContent>\n      </Toolbar>\n      <TableComposable aria-label=\"Ansible Lightspeed with IBM watsonx Code Assistant users\">\n        <Thead>\n          <Tr>\n            <Th />\n            {Columns.map((column, index) => (\n              <Th\n                key={column}\n                sort={{\n                  sortBy: {\n                    index: activeSortIndex,\n                    direction: activeSortDirection,\n                    defaultDirection: 'asc',\n                  },\n                  onSort: (_event, index, direction) => {\n                    setActiveSortIndex(index);\n                    setActiveSortDirection(direction);\n                  },\n                  columnIndex: index,\n                }}\n              >\n                {labels[column]}\n              </Th>\n            ))}\n          </Tr>\n        </Thead>\n\n        <Tbody>\n          {users === undefined && (\n            <TableSkeleton columns={Columns.length + 1} rows={3} />\n          )}\n          {data?.map((row, rowIndex) => (\n            <Tr key={row.id}>\n              <Td\n                select={{\n                  rowIndex,\n                  onSelect: (_event, isChecked) => onCheckUser(row, isChecked),\n                  isSelected: isUserChecked(row),\n                }}\n              />\n              {Columns.map((column) => (\n                <Td key={`${row.id}-${column}`} dataLabel={labels[column]}>\n                  {row[column]}\n                </Td>\n              ))}\n              {!isPicker && canRemove && (\n                <Td isActionCell>\n                  <ActionsColumn\n                    items={[\n                      {\n                        title: 'Remove user',\n                        onClick: () => onRemoveSeat?.(row),\n                      },\n                    ]}\n                  />\n                </Td>\n              )}\n            </Tr>\n          ))}\n          {data?.length === 0 && filterValue !== '' && (\n            <Tr>\n              <Td colSpan={Columns.length}>\n                <EmptyStateNoResults\n                  onClearAllFilters={() => setFilterValue('')}\n                />\n              </Td>\n            </Tr>\n          )}\n        </Tbody>\n      </TableComposable>\n      <Toolbar>\n        <Pagination\n          itemCount={itemCount || 0}\n          page={page}\n          perPage={perPage || 20}\n          onSetPage={(_, page) => onPageChange(page, perPage)}\n          onPerPageSelect={(_, perPage) => onPageChange(1, perPage)}\n          isCompact\n          variant=\"bottom\"\n        />\n      </Toolbar>\n    </>\n  );\n};\n","import {\n  Button,\n  Modal,\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { User } from '../client/service';\nimport { useState } from 'react';\n\ntype ConfirmRemoveDialogProps = {\n  users: User[];\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nconst PAGE_SIZE = 5;\n\nfunction userToSring(user: User) {\n  if (user.firstName || user.lastName) {\n    return `${user.firstName} ${user.lastName}`;\n  } else {\n    return user.userName;\n  }\n}\n\nexport const ConfirmRemoveDialog = ({\n  users,\n  onConfirm,\n  onCancel,\n}: ConfirmRemoveDialogProps) => {\n  const [usersPage, setUserPage] = useState<User[]>(users.slice(0, PAGE_SIZE));\n  const [pageSize, setPageSize] = useState(PAGE_SIZE);\n  const [page, setPage] = useState(1);\n\n  return (\n    <Modal\n      title=\"Remove users\"\n      titleIconVariant=\"warning\"\n      isOpen\n      variant=\"small\"\n      actions={[\n        <Button key=\"remove\" variant=\"danger\" onClick={() => onConfirm()}>\n          Remove user{users.length > 1 ? 's' : ''}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={() => onCancel()}>\n          Cancel\n        </Button>,\n      ]}\n      onClose={onCancel}\n    >\n      Are you sure you want to remove the user(s) below from Ansible Lightspeed\n      with IBM watsonx Code Assistant?\n      {users.length > 1 ? (\n        <>\n          <TableComposable variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th>Name</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {usersPage.map((user) => (\n                <Tr key={user.id}>\n                  <Td dataLabel=\"Name\">{userToSring(user)}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n          <Pagination\n            isCompact\n            perPageComponent=\"button\"\n            itemCount={users.length}\n            perPage={pageSize}\n            page={page}\n            variant={PaginationVariant.bottom}\n            perPageOptions={[\n              { title: '5', value: 5 },\n              { title: '10', value: 10 },\n              { title: '20', value: 20 },\n            ]}\n            onPerPageSelect={(_, pageSize) => {\n              setPageSize(pageSize);\n              setUserPage(users.slice((page - 1) * pageSize, page * pageSize));\n            }}\n            onSetPage={(_, page) => {\n              setPage(page);\n              setUserPage(users.slice((page - 1) * pageSize, page * pageSize));\n            }}\n          />\n        </>\n      ) : (\n        <p className=\"pf-u-pt-md\">\n          {users.map((user, i) => (\n            <>\n              <b>{userToSring(user)}</b>\n              {i !== users.length - 1 ? ', ' : ''}\n            </>\n          ))}\n        </p>\n      )}\n    </Modal>\n  );\n};\n","import { useState } from 'react';\n\nexport function usePagination(): [\n  number,\n  number,\n  (page: number, perPage: number) => void\n] {\n  const [{ page, perPage }, setPaginationState] = useState({\n    page: 1,\n    perPage: 10,\n  });\n  const setPagination = (page: number, perPage: number) =>\n    setPaginationState({ page, perPage });\n\n  return [page, perPage, setPagination];\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  Page,\n  PageSection,\n} from '@patternfly/react-core';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useAppNavigate } from '../Components/AppLink';\nimport { EmptyStateNoSubscription } from '../Components/EmptyStateNoSubscription';\nimport { RemoveUsersModal } from '../Components/RemoveUsersModal';\nimport { SeatsHeader } from '../Components/SeatsHeader';\nimport { useService } from '../Components/ServiceProvider';\nimport { UsersWithSeatTable } from '../Components/UsersWithSeatTable';\nimport { License, User, UserResult } from '../client/service';\nimport { ConfirmRemoveDialog } from '../Components/ConfirmRemoveDialog';\nimport { PageParams } from './AddUsersPage';\nimport { usePagination } from './usePagination';\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport const UsersPage = ({\n  user,\n  onSuccess,\n  onError,\n}: Optional<PageParams, 'onSuccess' | 'onError'>) => {\n  const navigate = useAppNavigate();\n  const [checkedUsers, setCheckedUsers] = useState<User[]>([]);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [alertOpen, setAlertOpen] = useState(true);\n\n  const [page, perPage, setPagination] = usePagination();\n\n  const service = useService();\n  const queryClient = useQueryClient();\n\n  const subscriptions = useQuery<License>({\n    queryKey: ['subscriptions', { page, perPage }],\n    queryFn: () => service.get(user, { page, perPage }),\n  });\n\n  const users = useQuery<UserResult>({\n    queryKey: ['users', { page, perPage }],\n    queryFn: () => service.seats(user, { page, perPage }),\n  });\n\n  const negativeSeats = (subscriptions.data?.available || 0) < 0;\n  const usersToRemove = Math.abs(subscriptions.data?.available || 0);\n\n  const cantAddUsers =\n    (subscriptions.data?.total || 0) > 0 && subscriptions.data?.available === 0;\n\n  const { mutate } = useMutation(\n    async (arg: User[]) => {\n      await service.unAssign(\n        user,\n        arg.map(({ id }) => id)\n      );\n      setConfirmOpen(false);\n      setCheckedUsers([]);\n    },\n    {\n      onSuccess: () => {\n        onSuccess && onSuccess('Successfully removed users');\n        queryClient.invalidateQueries();\n      },\n      onError: (error) => {\n        onError && onError('there was an error: ' + error);\n      },\n    }\n  );\n  return (\n    <Page>\n      <SeatsHeader\n        totalSeats={subscriptions.data?.total || 0}\n        availableSeats={subscriptions.data?.available || 0}\n      />\n      {subscriptions.data?.total === 0 && <EmptyStateNoSubscription />}\n      {negativeSeats && usersToRemove && (\n        <RemoveUsersModal\n          usersToRemove={usersToRemove}\n          onOk={() => navigate('/remove-users')}\n        />\n      )}\n      {confirmOpen && (\n        <ConfirmRemoveDialog\n          users={checkedUsers}\n          onConfirm={() => mutate(checkedUsers)}\n          onCancel={() => setConfirmOpen(false)}\n        />\n      )}\n      {cantAddUsers && alertOpen ? (\n        <PageSection style={{ paddingBottom: 0 }}>\n          <Alert\n            title={\n              \"There are 0 seats left in your organization's subscription. Contact Red Hat to manage your Ansible Lightspeed with IBM watsonx Code Assistant license.\"\n            }\n            variant=\"warning\"\n            actionClose={\n              <AlertActionCloseButton onClose={() => setAlertOpen(false)} />\n            }\n          />\n        </PageSection>\n      ) : null}\n      <PageSection>\n        {subscriptions.data?.total !== 0 && (\n          <UsersWithSeatTable\n            totalSeats={subscriptions.data?.total}\n            users={users.data?.users}\n            itemCount={users.data?.count}\n            canAddUser={!cantAddUsers && user.isOrgAdmin}\n            canRemove={user.isOrgAdmin}\n            page={page}\n            perPage={perPage}\n            onPageChange={setPagination}\n            onAddUser={() => {\n              navigate('/add-users');\n            }}\n            isUserChecked={(user) => checkedUsers.includes(user)}\n            onCheckUser={(user, isChecked) => {\n              setCheckedUsers(\n                isChecked\n                  ? [...checkedUsers, user]\n                  : checkedUsers.filter((u) => u !== user)\n              );\n            }}\n            setSelectedUser={(users) => setCheckedUsers(users)}\n            onRemoveSeat={(user) => {\n              if (user) setCheckedUsers([user]);\n              setConfirmOpen(true);\n            }}\n          />\n        )}\n      </PageSection>\n      <Outlet />\n    </Page>\n  );\n};\n","import { Alert, Button, ButtonVariant, Modal } from '@patternfly/react-core';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AuthenticatedUser, License, UserResult } from '../client/service';\nimport { useState } from 'react';\nimport { useAppNavigate } from '../Components/AppLink';\nimport { useService } from '../Components/ServiceProvider';\nimport { UsersWithSeatTable } from '../Components/UsersWithSeatTable';\nimport { usePagination } from './usePagination';\n\nexport type PageParams = {\n  user: AuthenticatedUser;\n  onSuccess: (message: string) => void;\n  onError: (message: string) => void;\n};\n\nexport const AddUsersPage = ({ user, onSuccess, onError }: PageParams) => {\n  const navigate = useAppNavigate();\n  const service = useService();\n\n  const close = () => navigate('/');\n\n  const [page, perPage, setPagination] = usePagination();\n\n  const subscriptions = useQuery<License>({\n    queryKey: ['subscriptions', { page, perPage }],\n    queryFn: () => service.get(user, { page, perPage }),\n  });\n\n  const queryClient = useQueryClient();\n  const users = useQuery<UserResult>({\n    queryKey: ['availableUsers', { page, perPage, usernames: [] }],\n    queryFn: () => service.seats(user, { page, perPage }, false),\n  });\n\n  const { mutate, isLoading } = useMutation(\n    () => service.assign(user, checkedUsers),\n    {\n      onSuccess: () => {\n        close();\n        onSuccess('Successfully assigned users');\n        queryClient.invalidateQueries();\n      },\n      onError: (error) => {\n        onError('there was an error: ' + error);\n      },\n    }\n  );\n\n  const [checkedUsers, setCheckedUsers] = useState<string[]>([]);\n  const assignedSeats =\n    (subscriptions.data?.total || 0) - (subscriptions.data?.available || 0);\n  const isAddDisabled =\n    subscriptions.data?.total === undefined\n      ? true\n      : checkedUsers.length > 0\n      ? checkedUsers.length + assignedSeats > subscriptions.data.total\n      : true;\n\n  return (\n    <Modal\n      isOpen\n      title=\"Assign users\"\n      variant=\"medium\"\n      onClose={close}\n      actions={[\n        <Button\n          key=\"assign\"\n          onClick={() => mutate()}\n          isDisabled={isAddDisabled}\n          isLoading={isLoading}\n        >\n          Assign\n        </Button>,\n        <Button key=\"cancel\" onClick={close} variant={ButtonVariant.link}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      {checkedUsers.length + assignedSeats >\n        (subscriptions.data?.total || 0) && (\n        <Alert\n          variant=\"warning\"\n          isInline\n          title={`Your organization has ${subscriptions.data?.total} Ansible Lightspeed with IBM watsonx Code Assistant seats only available for assignment. Please remove a few seat assignments in order to continue.`}\n        />\n      )}\n      <UsersWithSeatTable\n        isPicker\n        totalSeats={subscriptions.data?.total}\n        users={users.data?.users}\n        itemCount={users.data?.count}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        isUserChecked={(user) => checkedUsers.includes(user.id)}\n        onCheckUser={(user, isChecked) => {\n          setCheckedUsers(\n            isChecked\n              ? [...checkedUsers, user.id]\n              : checkedUsers.filter((u) => u !== user.id)\n          );\n        }}\n      />\n    </Modal>\n  );\n};\n","import { Button, ButtonVariant, Modal } from '@patternfly/react-core';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { License, UserResult } from '../client/service';\nimport { useState } from 'react';\nimport { useAppNavigate } from '../Components/AppLink';\nimport { useService } from '../Components/ServiceProvider';\nimport { PageParams } from './AddUsersPage';\nimport { UsersWithSeatTable } from '../Components/UsersWithSeatTable';\nimport { usePagination } from './usePagination';\n\nexport const RemoveUsersPage = ({ user, onSuccess, onError }: PageParams) => {\n  const navigate = useAppNavigate();\n  const service = useService();\n\n  const subscriptions = useQuery<License>({\n    queryKey: ['subscriptions'],\n    queryFn: () => service.get(user, { page, perPage }),\n  });\n\n  const [page, perPage, setPagination] = usePagination();\n\n  const queryClient = useQueryClient();\n  const users = useQuery<UserResult>({\n    queryKey: ['assignedUsers', { page, perPage, usernames: [] }],\n    queryFn: () => service.seats(user, { page, perPage }),\n  });\n\n  const [checkedUsers, setCheckedUsers] = useState<string[]>([]);\n\n  const assignedSeats =\n    (subscriptions.data?.total || 0) - (subscriptions.data?.available || 0);\n\n  const { mutate, isLoading } = useMutation(\n    () => {\n      setCheckedUsers([]);\n      return service.unAssign(user, checkedUsers);\n    },\n    {\n      onSuccess: () => {\n        onSuccess('Successfully removed users');\n        queryClient.invalidateQueries();\n      },\n      onError: (error) => {\n        onError('there was an error: ' + error);\n      },\n    }\n  );\n\n  const close = () => navigate('/');\n\n  return (\n    <Modal\n      isOpen\n      title={`Remove ${assignedSeats} users from their assigned seats`}\n      variant=\"medium\"\n      onClose={close}\n      actions={[\n        <Button\n          key=\"remove\"\n          onClick={() => mutate()}\n          isDisabled={checkedUsers.length > assignedSeats}\n          isLoading={isLoading}\n        >\n          Remove\n        </Button>,\n        <Button\n          key=\"cancel\"\n          onClick={close}\n          variant={ButtonVariant.link}\n          isDisabled={isLoading}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <UsersWithSeatTable\n        isPicker\n        totalSeats={subscriptions.data?.total}\n        users={users.data?.users}\n        itemCount={users.data?.count}\n        page={page}\n        perPage={perPage}\n        onPageChange={setPagination}\n        isUserChecked={(user) => checkedUsers.includes(user.id)}\n        onCheckUser={(user, isChecked) => {\n          setCheckedUsers(\n            isChecked\n              ? [...checkedUsers, user.id]\n              : checkedUsers.filter((u) => u !== user.id)\n          );\n        }}\n      />\n    </Modal>\n  );\n};\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { AuthenticatedUser } from './client/service';\nimport { ServiceContextProvider } from './Components/ServiceProvider';\nimport { UsersPage } from './Pages/UsersPage';\nimport { AddUsersPage } from './Pages/AddUsersPage';\nimport { RemoveUsersPage } from './Pages/RemoveUsersPage';\n\nexport const AppRoutes = () => {\n  const [user, setUser] = useState<AuthenticatedUser>();\n  const dispatch = useDispatch();\n  const handleAlert = (\n    message: string,\n    type:\n      | 'default'\n      | 'success'\n      | 'danger'\n      | 'warning'\n      | 'info'\n      | undefined = 'success'\n  ) => {\n    dispatch(\n      addNotification({\n        variant: type,\n        title: message,\n      })\n    );\n  };\n  const handleError = (message: string) => handleAlert(message, 'danger');\n\n  const {\n    auth: { getToken, getUser },\n  } = useChrome();\n\n  useEffect(() => {\n    (async () => {\n      const user = await getUser();\n      if (user)\n        setUser({\n          orgId: user.identity.org_id,\n          isOrgAdmin: user.identity.user?.is_org_admin,\n          serviceId: 'smarts',\n          token: getToken,\n        } as AuthenticatedUser);\n    })();\n  }, []);\n\n  if (!user) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      }\n    >\n      <ServiceContextProvider\n        serviceName={process.env.SERVICE_KEY!}\n        baseUrl={process.env.BASE_URL}\n      >\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <UsersPage\n                user={user}\n                onSuccess={handleAlert}\n                onError={handleError}\n              />\n            }\n          >\n            <Route\n              path=\"add-users\"\n              element={\n                <AddUsersPage\n                  user={user}\n                  onSuccess={handleAlert}\n                  onError={handleError}\n                />\n              }\n            />\n            <Route\n              path=\"remove-users\"\n              element={\n                <RemoveUsersPage\n                  user={user}\n                  onSuccess={handleAlert}\n                  onError={handleError}\n                />\n              }\n            />\n          </Route>\n          {/* Finally, catch all unmatched routes */}\n          <Route element={<InvalidObject />} />\n        </Routes>\n      </ServiceContextProvider>\n    </Suspense>\n  );\n};\n","import NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { Fragment, useEffect } from 'react';\nimport { Reducer } from 'redux';\nimport './App.scss';\n\nimport { AppRoutes } from './AppRoutes';\n\nconst App = () => {\n  const { updateDocumentTitle } = useChrome();\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n    // You can use directly the name of your app\n    updateDocumentTitle('Ansible Lightspeed with IBM watsonx Code Assistant');\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <AppRoutes />\n    </Fragment>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-unused-vars */\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport type ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport type { Middleware, Reducer } from 'redux';\n\nexport let registry: ReducerRegistry<Reducer>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n"],"names":["get","Promise","fetch","json","totalSeats","availableSeats","total","available","seats","assign","resolve","unAssign","oazapfts","baseUrl","licenseServiceGetLicense","orgId","serviceId","opts","ok","fetchJson","encodeURIComponent","licenseServiceModifySeats","body","method","licenseServiceGetSeats","includeUsers","filter","this","token","requestHeader","result","Number","seatsAvailable","seatsTotal","_pagination","assigned","users","map","id","firstName","lastName","userName","count","length","header","user","userIds","modify","unassign","getSeats","status","excludeStatus","limit","offset","postSeats","seatRequest","deleteSeatsById","listPrincipals","matchCriteria","usernames","sortOrder","email","adminOnly","orderBy","usernameOnly","match_criteria","sort_order","admin_only","order_by","username_only","pagination","perPage","page","allowed","consumed","data","subscription_id","account_username","first_name","last_name","meta","username","all","tokenString","headers","Authorization","getService","serviceKey","CiamAuthz","EntitlementsService","MockService","Error","ServiceContext","createContext","undefined","useService","context","resolved","useContext","useRequiredContext","ServiceContextProvider","serviceName","children","Provider","value","useAppNavigate","navigate","useNavigate","to","props","basename","replace","pathname","mergeToBasename","DangerIcon","Icon","size","EmptyStateNoSubscription","EmptyState","isFullHeight","EmptyStateIcon","component","variant","Title","headingLevel","EmptyStateBody","RemoveUsersModal","usersToRemove","onOk","Modal","ModalVariant","small","isOpen","style","display","color","className","showClose","actions","Button","onClick","ButtonVariant","primary","SeatsHeader","PageSection","hasShadowBottom","TextContent","Level","LevelItem","Text","Label","isCompact","EmptyStateNoAssignedSeat","onAddUsers","icon","ouiaId","EmptyStateNoResults","onClearAllFilters","EmptyStateVariant","xs","Columns","labels","TableSkeleton","columns","rows","skeletonCells","Array","fill","_","index","Td","Skeleton","screenreaderText","skeletonRows","Tr","BulkSelectToolbar","itemCount","select","useState","isBulkSelectOpen","setIsBulkSelectOpen","menuToggleCheckmark","setMenuToggleCheckmark","Popper","trigger","MenuToggle","isExpanded","splitButtonOptions","items","MenuToggleCheckbox","isChecked","onChange","checked","popper","Menu","onSelect","_ev","itemId","MenuContent","MenuList","MenuItem","isVisible","popperMatchesTriggerWidth","UsersWithSeatTable","canAddUser","canRemove","isUserChecked","onCheckUser","setSelectedUser","onPageChange","onRemoveSeat","onAddUser","isPicker","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","filterColumn","setFilterColumn","search","setSearch","filterValue","setFilterValue","filterOpen","setFilterOpen","startIndex","useMemo","slice","includes","Bullseye","Spinner","Toolbar","clearAllFilters","ToolbarContent","ToolbarItem","option","ToolbarToggleGroup","toggleIcon","breakpoint","ToolbarGroup","toString","column","ToolbarFilter","chips","deleteChip","deleteChipGroup","categoryName","widths","default","SearchInput","placeholder","_event","onSearch","onClear","alignment","Pagination","onSetPage","onPerPageSelect","TableComposable","Thead","Th","sort","sortBy","direction","defaultDirection","onSort","columnIndex","Tbody","row","rowIndex","isSelected","dataLabel","isActionCell","ActionsColumn","title","colSpan","userToSring","ConfirmRemoveDialog","onConfirm","onCancel","usersPage","setUserPage","pageSize","setPageSize","setPage","titleIconVariant","onClose","perPageComponent","PaginationVariant","bottom","perPageOptions","i","usePagination","setPaginationState","UsersPage","onSuccess","onError","checkedUsers","setCheckedUsers","confirmOpen","setConfirmOpen","alertOpen","setAlertOpen","setPagination","service","queryClient","subscriptions","useQuery","queryKey","queryFn","negativeSeats","Math","abs","cantAddUsers","mutate","useMutation","arg","invalidateQueries","error","Page","paddingBottom","Alert","actionClose","AlertActionCloseButton","isOrgAdmin","u","Outlet","AddUsersPage","close","isLoading","assignedSeats","isAddDisabled","isDisabled","link","isInline","RemoveUsersPage","AppRoutes","setUser","dispatch","handleAlert","message","type","handleError","useChrome","getToken","getUser","useEffect","identity","org_id","is_org_admin","Suspense","fallback","Routes","Route","path","element","InvalidObject","updateDocumentTitle","register","notifications","Fragment","init","errorDescriptionKey","middleware"],"sourceRoot":""}